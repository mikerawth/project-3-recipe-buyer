{"version":3,"sources":["services/FoodService.js","services/CartService.js","components/navbar/Navbar.js","components/recipesearchresult/RecipeSearchResult.js","components/recipesearch/RecipeSearch.js","components/main/Main.js","components/recipesummary/RecipeSummary.js","components/cartingredient/CartIngredient.js","components/cartrecipe/CartRecipe.js","components/cart/Cart.js","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","App.js","serviceWorker.js","index.js"],"names":["FoodService","_this","this","Object","classCallCheck","test","searchRecipes","query","service","post","then","response","console","log","data","getRecipeSummary","recipeID","get","concat","getRecipeIngredients","getRecipeInstructions","axios","create","baseURL","process","withCredentials","CartService","addIngredients","theIngredients","recipeApiID","recipeName","recipeCost","grabIngredients","grabUserAndCart","grabIngredientInfo","ingID","toggleIngredient","currentStatus","checkout","Navbar","props","react_default","a","createElement","className","react_router_dom","to","theUser","onClick","toggleForm","username","pleaseLogOut","getUser","RecipeSearchResult","recipeTitle","RecipeSearch","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","searchRecipe","preventDefault","rSearch","state","searchResults","results","displayRecipeSearchResults","map","eachRecipe","i","key","recipesearchresult_RecipeSearchResult","id","title","onSubmit","onChange","Component","Main","recipesearch_RecipeSearch","RecipeSummary","foodService","theThing","theTitle","ingredients","theInstructions","instructions","theTags","tags","theCost","cost","ready","displayRecipeIngredients","eachIngredient","usAmount","usUnit","displayRecipeInstructions","eachStep","step","displayRecipeTags","eachTag","addIngredientsToCart","cartService","match","params","React","CartIngredient","eachIng","_id","ingInclude","include","ingName","ingUsAmount","ingUsUnit","ingMetAmount","metricAmount","ingMetUnit","metricUnit","ingCost","price","isReady","checkBoxToggle","theResponse","getUsersCart","updateRecipePrice","ingredientCheckBox","type","checked","toFixed","CartRecipe","updatedCost","setTimeout","recipeTotal","recipeIngredients","cartingredient_CartIngredient","recipeInfo","Cart","theUsersInfo","cartRecipes","cart","displayCartRecipes","cartrecipe_CartRecipe","cartIngredients","cartTotal","_this2","AuthService","signup","password","login","currentUser","logout","Signup","tryToSignUp","uName","usernameInput","pWord","passwordInput","Login","tryToLogin","App","getCurrentlyLoggedInUser","authService","currentlyLoggedIn","catch","whichForm","_this$setState","theForm","otherForm","setCurrentRecipe","queryRecipeID","currentRecipeID","signupShowing","loginShowing","navbar_Navbar","signup_Signup","login_Login","react_router","exact","path","render","main_Main","message","recipesummary_RecipeSummary","assign","cart_Cart","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.19e0117e.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nclass FoodService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_FOODSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n\n  test = () => {\n    return 'test works'\n  }\n\n  searchRecipes = (query) => {\n    return this.service.post('/search/' + query)\n      .then(response => {\n        console.log(\"the response in the component >>>>>>>> \", response.data)\n        return response.data\n      })\n  }\n\n  getRecipeSummary = (recipeID) => {\n    return this.service.get(`/${recipeID}/information`)\n      .then(response => response.data)\n  }\n\n  // CHANGE TO GET PRICE OF RECIPE'S INGREDIENTS\n  getRecipeIngredients = (recipeID) => {\n    return this.service.get(`/${recipeID}/ingredients`)\n      .then(response => response.data)\n  }\n\n  // DO NOT USE\n  getRecipeInstructions = (recipeID) => {\n    return this.service.get(`/${recipeID}/instructions`)\n      .then(response => response.data)\n  }\n\n  // addIngredients = (theIngredients, apiID) => {\n  //   return this.service.post('/cart/addIngredients', { theIngredients, apiID })\n  //     .then(response => response.data)\n  // }\n}\n\nexport default FoodService","import axios from 'axios';\n\n\nclass CartService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_CARTSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  addIngredients = (theIngredients, recipeApiID, recipeName, recipeCost) => {\n    return this.service.post('/addRecipeAndIngredients', { theIngredients, recipeApiID, recipeName, recipeCost })\n      .then(response => response.data)\n  }\n\n  grabIngredients = () => {\n    return this.service.get('/getIngredients')\n      .then(response => response.data)\n  }\n\n\n  grabUserAndCart = () => {\n    return this.service.post('/usersCart')\n      .then(response => response.data)\n  }\n\n  grabIngredientInfo = (ingID) => {\n    return this.service.get(`/ing/${ingID}`)\n      .then(response => response.data)\n  }\n\n  toggleIngredient = (ingID, currentStatus, recipeID) => {\n    return this.service.post(`/ing/toggle/`, { ingID, currentStatus, recipeID })\n      .then(response => response.data)\n  }\n\n  checkout = () => {\n    return this.service.post('/checkout')\n      .then(response => response.data)\n  }\n}\n\nexport default CartService;","import React from 'react';\nimport './navbar.css'\nimport { NavLink, Redirect } from 'react-router-dom'\n\nfunction Navbar(props) {\n\n  const doTheLogout = () => {\n    props.pleaseLogOut()\n      .then(() => {\n        props.getUser();\n      })\n\n  }\n\n  return (\n    <div className=\"Navbar\">\n      <div>\n        <span>\n          <NavLink to=\"/\">Home</NavLink>\n          {props.theUser &&\n            <NavLink to=\"/cart\">Cart</NavLink>\n          }\n        </span>\n      </div>\n\n      <div>\n        {!props.theUser &&\n          <span>\n            <button onClick={() => props.toggleForm('login')} > Login </button>\n            <button onClick={() => props.toggleForm('signup')}>Sign Up</button>\n          </span>\n        }\n\n        {props.theUser &&\n          <span>\n            <span>{props.theUser.username}</span>\n            <button onClick={doTheLogout} >Log Out </button>\n          </span>\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './recipesearchresult.css'\n\nfunction RecipeSearchResult(props) {\n\n  return (\n    <Link to={`recipes/summary/${props.recipeID}`}>\n      {props.recipeTitle}\n    </Link>\n  )\n\n}\n\nexport default RecipeSearchResult;","import React, { Component } from 'react';\nimport FoodService from '../../services/FoodService';\nimport './recipesearch.css'\nimport RecipeSearchResult from '../recipesearchresult/RecipeSearchResult';\n\nclass RecipeSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipeName: '',\n      searchResults: [],\n    };\n    this.service = new FoodService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  searchRecipe = (e) => {\n    e.preventDefault();\n    const rSearch = this.state.recipeName;\n\n\n    this.service.searchRecipes(rSearch)\n      .then((searchResults) => {\n        console.log(\"==============\", searchResults)\n        this.setState({\n          searchResults: searchResults.results,\n        })\n      })\n\n  }\n\n  displayRecipeSearchResults = () => {\n\n    return this.state.searchResults.map((eachRecipe, i) => {\n      return (\n        <div key={i} className=\"recipe-search-result\">\n          {/* //   <Link to={`recipes/summary/${eachRecipe.id}`}>\n          //     {eachRecipe.title}\n          //   </Link> */}\n          <RecipeSearchResult\n            recipeID={eachRecipe.id}\n            recipeTitle={eachRecipe.title}\n          />\n        </div>\n      )\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"recipe-search-bar\">\n        <h3>Look Up Recipe</h3>\n        <form className=\"recipe-search-form\" onSubmit={this.searchRecipe}>\n          <input className=\"recipe-search-input\" value={this.state.recipeName}\n            name=\"recipeName\"\n            onChange={this.handleChange}\n          />\n\n          <button>Submit</button>\n\n        </form>\n\n\n        {this.displayRecipeSearchResults()}\n      </div>\n    )\n  }\n}\n\nexport default RecipeSearch;","import React from 'react';\nimport './main.css';\nimport RecipeSearch from '../recipesearch/RecipeSearch';\n\n\nfunction Main(props) {\n\n  return (\n    <div className=\"Main\">\n      <RecipeSearch\n        {...props}\n      />\n    </div>\n  );\n\n}\n\nexport default Main;","import React from 'react';\n\n\n\nclass RecipeSummary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      theTitle: \"\",\n      theIngredients: [],\n      theInstructions: [],\n      theTags: [],\n      theCost: 0,\n      ready: false\n    }\n    this.recipeID = this.props.match.params.recipeID\n  }\n\n  getRecipeSummary = () => {\n    this.props.foodService.getRecipeSummary(this.recipeID)\n      .then((theThing) => {\n        this.setState({\n          theTitle: theThing.title,\n          theIngredients: theThing.ingredients,\n          theInstructions: theThing.instructions,\n          theTags: theThing.tags,\n          theCost: theThing.cost,\n          ready: true,\n        }, () => console.log(\"theThing\", theThing))\n      })\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.theIngredients.map((eachIngredient, i) => {\n      return (\n        <div key={i}>\n          <span className=\"ingredient-name\">{eachIngredient.name} / </span>\n          <span className=\"ingredient-amount-us\">{eachIngredient.usAmount} {eachIngredient.usUnit} / </span>\n          {/* <span className=\"ingredient-amount-metric\">{eachIngredient.metricAmount} {eachIngredient.metricUnit}</span> */}\n        </div>\n      )\n    })\n  }\n\n  displayRecipeInstructions = () => {\n    return this.state.theInstructions.map((eachStep, i) => {\n      return (\n        <li key={i}>{eachStep.step}</li>\n      )\n    })\n  }\n\n  displayRecipeTags = () => {\n    return this.state.theTags.map((eachTag, i) => {\n      return (\n        <li key={i}>{eachTag}</li>\n      )\n    })\n  }\n\n  addIngredientsToCart = () => {\n    console.log(this.state.theIngredients, this.recipeID, this.state.theTitle)\n    this.props.cartService.addIngredients(this.state.theIngredients, this.recipeID, this.state.theTitle, this.state.theCost)\n  }\n\n\n  componentDidMount() {\n    this.getRecipeSummary();\n  }\n\n\n  render() {\n\n    if (this.state.ready)\n      return (\n        <div>\n          <div className=\"recipe-name\">\n            <h2>{this.state.theTitle}</h2>\n          </div>\n\n          <div className=\"recipe-ingredient-list\">\n            <h3>Ingredients</h3>\n            {this.displayRecipeIngredients()}\n          </div>\n\n\n          <div className=\"recipe-directions\">\n            <h3>Directions</h3>\n            <ol>\n              {this.displayRecipeInstructions()}\n            </ol>\n          </div>\n\n          <div className=\"recipe-tags\">\n            <h3>Tags</h3>\n            <ol>\n              {this.displayRecipeTags()}\n            </ol>\n          </div>\n          {this.props.theUser &&\n            <button onClick={this.addIngredientsToCart}>Add Ingredients</button>\n          }\n\n\n        </div>\n      )\n    else {\n      return (\n        <div>Loading...</div>\n      )\n    }\n  }\n\n}\n\nexport default RecipeSummary;","import React from 'react'\nimport CartService from '../../services/CartService'\n\nimport './cartingredient.css'\n\n\nclass CartIngredient extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cartService = new CartService()\n    this.state = {\n      id: '',\n      ingInclude: false,\n      ingName: '',\n      ingUsAmount: 0,\n      ingUsUnit: '',\n      ingMetAmount: 0,\n      ingMetUnit: '',\n      ingCost: 0\n    }\n  }\n\n  getRecipeIngredients = () => {\n    this.setState({\n      id: this.props.eachIng._id,\n      ingInclude: this.props.eachIng.include,\n      ingName: this.props.eachIng.name,\n      ingUsAmount: this.props.eachIng.usAmount,\n      ingUsUnit: this.props.eachIng.usUnit,\n      ingMetAmount: this.props.eachIng.metricAmount,\n      ingMetUnit: this.props.eachIng.metricUnit,\n      ingCost: this.props.eachIng.price,\n      ready: false,\n\n    })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getRecipeIngredients();\n    this.isReady();\n  }\n\n  checkBoxToggle = () => {\n    this.cartService.toggleIngredient(this.state.id, this.state.ingInclude, this.props.recipeID)\n      .then((theResponse) => {\n        this.props.getUsersCart();\n        this.setState({ ingInclude: !this.state.ingInclude })\n        this.props.updateRecipePrice(theResponse.cost)\n\n      })\n  }\n\n  ingredientCheckBox = () => {\n    if (this.state.ingInclude)\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"checked\"\n        />\n      )\n    else\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"\"\n        />\n      )\n  }\n\n  displayRecipeIngredients = () => {\n    return (\n      <div className=\"ing-listing d-flex\">\n        <div className=\"ing\">{this.ingredientCheckBox()}</div>\n        <div className=\"ing ing-name\">{this.state.ingName}</div>\n        <div className=\"ing ing-amount\">{this.state.ingUsAmount}</div>\n        <div className=\"ing ing-unit\">{this.state.ingUsUnit}</div>\n        {/* <div>{this.state.ingMetAmount}</div>\n        <div>{this.state.ingMetUnit}</div> */}\n        <div className=\"ing ing-cost\">${this.state.ingCost.toFixed(2)}</div>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"ing-listing-container\">\n          {this.displayRecipeIngredients()}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartIngredient;","import React from 'react'\nimport CartIngredient from '../cartingredient/CartIngredient'\n\nimport './cartrecipe.css'\n\n\nclass CartRecipe extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipeName: props.recipeInfo.name,\n      recipeIngredients: props.recipeInfo.ingredients,\n      recipeTotal: props.recipeInfo.cost,\n      ready: false,\n    }\n  }\n\n  updateRecipePrice = (updatedCost) => {\n    setTimeout(() => { this.setState({ recipeTotal: updatedCost }) }, 200)\n\n\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.recipeIngredients.map((eachIng) => {\n      return (\n        <div className=\"ingredient-listing\" key={eachIng._id}>\n          <CartIngredient\n            eachIng={eachIng}\n            recipeID={this.props.recipeInfo._id}\n            updateRecipePrice={this.updateRecipePrice}\n            getUsersCart={this.props.getUsersCart}\n          />\n        </div>\n      )\n    })\n  }\n\n\n  componentDidMount() {\n    this.isReady();\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"cart-recipe d-flex-col\">\n          <div className=\"cart-recipe-header\"><h3>{this.state.recipeName}</h3></div>\n          <div className=\"cart-recipe-info d-flex-col\">\n            {this.displayRecipeIngredients()}\n          </div>\n          <span className=\"d-flex\">\n            <div className=\"ing-checkbox\"></div>\n            <div className=\"ing-name\"></div>\n            <div className=\"ing-amount\"></div>\n            <div className=\"ing-unit\">Total:</div>\n            <div className=\"ing-cost\">${this.state.recipeTotal.toFixed(2)}</div>\n          </span>\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartRecipe;","import React from 'react';\nimport CartService from '../../services/CartService'\n\nimport CartRecipe from '../cartrecipe/CartRecipe'\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cartIngredients: [],\n      cartRecipes: [],\n      ready: false,\n      cartTotal: 0,\n    }\n    this.cartService = new CartService()\n  }\n\n  getUsersCart = () => {\n    this.cartService.grabUserAndCart()\n      .then((theUsersInfo) => {\n        this.setState({ cartRecipes: theUsersInfo.cart })\n      })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getUsersCart();\n    this.isReady();\n  }\n\n\n\n  displayCartRecipes = () => {\n    return this.state.cartRecipes.map((eachRecipe) => {\n      return (\n        <div key={eachRecipe._id}>\n          <CartRecipe recipeInfo={eachRecipe}\n            getUsersCart={this.getUsersCart} />\n        </div>\n      )\n    })\n  }\n\n  checkout = () => {\n    this.cartService.checkout()\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div>\n          <div>\n            <div>Total: {this.state.cartTotal}</div>\n            <button onClick={() => { this.checkout() }}>Checkout</button>\n          </div>\n          {this.displayCartRecipes()}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Cart</div>\n      )\n    }\n  }\n}\n\nexport default Cart\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', { username: username, password: password })\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', { username, password })\n      .then(response => response.data)\n  }\n\n  currentUser = () => {\n    return this.service.get('/getcurrentuser')\n      .then(response => response.data)\n  }\n\n\n  logout = () => {\n    return this.service.post('/logout', {})\n      .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './signup.css'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToSignUp = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.signup(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('signup');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"signup-form\" onSubmit={this.tryToSignUp}>\n\n        <h3>Signup For An Account</h3>\n\n        <legend>Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './login.css'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToLogin = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.login(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('login');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"login-form\" onSubmit={this.tryToLogin}>\n\n        <h3>Login</h3>\n\n        <legend>Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\n\nimport FoodService from './services/FoodService'\nimport CartService from './services/CartService'\n\nimport Navbar from './components/navbar/Navbar'\nimport Main from './components/main/Main'\nimport RecipeSummary from './components/recipesummary/RecipeSummary'\nimport Cart from './components/cart/Cart'\n\nimport AuthService from './services/AuthService.js';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      signupShowing: false,\n      loginShowing: false,\n    }\n    this.foodService = new FoodService()\n    this.authService = new AuthService()\n    this.cartService = new CartService()\n  }\n\n  getCurrentlyLoggedInUser = () => {\n    this.authService.currentUser()\n      .then((theUser) => {\n        this.setState({ currentlyLoggedIn: theUser })\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null })\n      })\n  }\n\n  toggleForm = (whichForm) => {\n    let theForm, otherForm;\n    if (whichForm === \"signup\") {\n      theForm = 'signupShowing'\n      otherForm = 'loginShowing'\n    } else {\n      theForm = 'loginShowing'\n      otherForm = 'signupShowing'\n    }\n    this.setState({ [theForm]: !this.state[theForm], [otherForm]: false })\n  }\n\n  // want to remove (using a params to find data)\n  setCurrentRecipe = (queryRecipeID) => {\n    this.setState({ currentRecipeID: queryRecipeID },\n      () => console.log(this.state.currentRecipeID))\n  }\n\n  componentDidMount() {\n    this.getCurrentlyLoggedInUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          theUser={this.state.currentlyLoggedIn}\n          pleaseLogOut={() => this.authService.logout()}\n          getUser={this.getCurrentlyLoggedInUser}\n          toggleForm={this.toggleForm}\n        />\n\n        {this.state.signupShowing &&\n          <Signup getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        {this.state.loginShowing &&\n          <Login getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        {/* <div>My Heroku updated if this is showing on Heroku</div> */}\n        <Switch>\n\n          {/* <Route exact path=\"/login\" render={(props) =>\n            <Login\n              getUser={this.getCurrentlyLoggedInUser}\n            />} />\n\n          <Route exact path=\"/signup\" render={(props) =>\n            <Signup\n              getUser={this.getCurrentlyLoggedInUser}\n            />} /> */}\n\n\n          <Route exact path=\"/\" render={(props) =>\n            <Main\n              message={this.state.message}\n            />} />\n\n          <Route exact path=\"/recipes/summary/:recipeID\" render={(props) =>\n            <RecipeSummary\n              {...props}\n              currentRecipeID={this.state.currentRecipeID}\n              foodService={this.foodService}\n              cartService={this.cartService}\n              theUser={this.state.currentlyLoggedIn}\n            />} />\n\n          <Route exact path=\"/cart\" render={(props) =>\n            <Cart\n            />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}