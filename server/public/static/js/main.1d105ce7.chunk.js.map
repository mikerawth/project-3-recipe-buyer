{"version":3,"sources":["services/FoodService.js","services/CartService.js","components/navbar/Navbar.js","components/recipesearchresult/RecipeSearchResult.js","components/recipesearch/RecipeSearch.js","components/main/Main.js","components/ingredientsaddedscreen/IngredientsAddedScreen.js","components/recipesummary/RecipeSummary.js","components/cartingredient/CartIngredient.js","components/cartrecipe/CartRecipe.js","components/checkout/Checkout.js","components/cart/Cart.js","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","App.js","serviceWorker.js","index.js"],"names":["FoodService","_this","this","Object","classCallCheck","test","searchRecipes","query","service","post","then","response","console","log","data","getRecipeSummary","recipeID","get","concat","getRecipeIngredients","getRecipeInstructions","axios","create","baseURL","process","withCredentials","CartService","addIngredients","theIngredients","recipeApiID","recipeName","recipeCost","recipeImg","grabIngredients","grabUserAndCart","grabIngredientInfo","ingID","toggleIngredient","currentStatus","checkout","Navbar","props","react_default","a","createElement","className","react_router_dom","to","theUser","onClick","toggleForm","username","pleaseLogOut","getUser","RecipeSearchResult","src","recipe","image","recipeTitle","RecipeSearch","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","searchRecipe","preventDefault","rSearch","state","searchResults","results","displayRecipeSearchResults","length","map","eachRecipe","i","key","recipesearchresult_RecipeSearchResult","id","title","onSubmit","onChange","Component","Main","recipesearch_RecipeSearch","IngredientsAddedScreen","RecipeSummary","foodService","theThing","theTitle","ingredients","theInstructions","instructions","theTags","tags","theCost","cost","theImg","ready","displayRecipeIngredients","eachIngredient","alt","column","usAmount","usUnit","displayRecipeInstructions","eachStep","step","displayRecipeTags","eachTag","addIngredientsToCart","cartService","ingredientScreen","match","params","ingredientsaddedscreen_IngredientsAddedScreen","React","CartIngredient","eachIng","_id","ingInclude","include","ingName","ingUsAmount","ingUsUnit","ingMetAmount","metricAmount","ingMetUnit","metricUnit","ingCost","price","isReady","checkBoxToggle","theResponse","getUsersCart","updateRecipePrice","ingredientCheckBox","type","checked","toFixed","CartRecipe","updatedCost","setTimeout","recipeTotal","recipeIngredients","cartingredient_CartIngredient","recipeInfo","Checkout","Cart","theUsersInfo","cartRecipes","cart","theCartTotal","eachR","reduce","b","cartTotal","displayCartRecipes","cartrecipe_CartRecipe","updateCartPriceTotal","priceUpdate","checkoutScreen","cartIngredients","_this2","checkout_Checkout","AuthService","signup","password","login","currentUser","logout","Signup","tryToSignUp","uName","usernameInput","pWord","passwordInput","Login","tryToLogin","App","getCurrentlyLoggedInUser","authService","currentlyLoggedIn","catch","whichForm","_this$setState","theForm","otherForm","setCurrentRecipe","queryRecipeID","currentRecipeID","signupShowing","loginShowing","navbar_Navbar","signup_Signup","login_Login","class","react_router","exact","path","render","main_Main","message","recipesummary_RecipeSummary","assign","cart_Cart","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.1d105ce7.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nclass FoodService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_FOODSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n\n  test = () => {\n    return 'test works'\n  }\n\n  searchRecipes = (query) => {\n    return this.service.post('/search/' + query)\n      .then(response => {\n        console.log(\"the response in the component >>>>>>>> \", response.data)\n        return response.data\n      })\n  }\n\n  getRecipeSummary = (recipeID) => {\n    return this.service.get(`/${recipeID}/information`)\n      .then(response => response.data)\n  }\n\n  // CHANGE TO GET PRICE OF RECIPE'S INGREDIENTS\n  getRecipeIngredients = (recipeID) => {\n    return this.service.get(`/${recipeID}/ingredients`)\n      .then(response => response.data)\n  }\n\n  // DO NOT USE\n  getRecipeInstructions = (recipeID) => {\n    return this.service.get(`/${recipeID}/instructions`)\n      .then(response => response.data)\n  }\n\n  // addIngredients = (theIngredients, apiID) => {\n  //   return this.service.post('/cart/addIngredients', { theIngredients, apiID })\n  //     .then(response => response.data)\n  // }\n}\n\nexport default FoodService","import axios from 'axios';\n\n\nclass CartService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_CARTSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  addIngredients = (theIngredients, recipeApiID, recipeName, recipeCost, recipeImg) => {\n    return this.service.post('/addRecipeAndIngredients', { theIngredients, recipeApiID, recipeName, recipeCost, recipeImg })\n      .then(response => response.data)\n  }\n\n  grabIngredients = () => {\n    return this.service.get('/getIngredients')\n      .then(response => response.data)\n  }\n\n\n  grabUserAndCart = () => {\n    return this.service.post('/usersCart')\n      .then(response => response.data)\n  }\n\n  grabIngredientInfo = (ingID) => {\n    return this.service.get(`/ing/${ingID}`)\n      .then(response => response.data)\n  }\n\n  toggleIngredient = (ingID, currentStatus, recipeID) => {\n    return this.service.post(`/ing/toggle/`, { ingID, currentStatus, recipeID })\n      .then(response => response.data)\n  }\n\n  checkout = () => {\n    return this.service.post('/checkout')\n      .then(response => response.data)\n  }\n}\n\nexport default CartService;","import React from 'react';\nimport './navbar.css'\nimport { NavLink, Redirect } from 'react-router-dom'\n\nfunction Navbar(props) {\n\n  const doTheLogout = () => {\n    props.pleaseLogOut()\n      .then(() => {\n        props.getUser();\n      })\n\n  }\n\n  return (\n    <div className=\"Navbar block\">\n      {/* <span><h1 className=\"title is-3 recipe-buyer-title\">RECIPE BUYER</h1></span> */}\n      <div>\n        <span>\n          <span className=\"recipe-buyer-title\">RECIPE BUYER</span>\n          <NavLink className=\"button is-small\" to=\"/\">Home</NavLink>\n          {props.theUser &&\n            <NavLink className=\"button is-small\" to=\"/cart\">Cart</NavLink>\n          }\n        </span>\n      </div>\n\n      <div>\n        {!props.theUser &&\n          <span>\n            <button className=\"button is-small\" onClick={() => props.toggleForm('login')} > Login </button>\n            <button className=\"button is-small\" onClick={() => props.toggleForm('signup')}>Sign Up</button>\n          </span>\n        }\n\n        {props.theUser &&\n          <span>\n            <span>{props.theUser.username}</span>\n            <button className=\"button is-small\" onClick={doTheLogout} >Log Out </button>\n          </span>\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './recipesearchresult.css'\n\nfunction RecipeSearchResult(props) {\n\n  return (\n    <div className=\"box columns\">\n      <img className=\"recipe-search-image\" src={`https://spoonacular.com/recipeImages/${props.recipe.image}`} />\n      <div className=\"column\">\n        <Link to={`recipes/summary/${props.recipeID}`}>\n          {props.recipeTitle}\n          {console.log(props.recipe)}\n        </Link>\n      </div>\n\n    </div>\n  )\n\n}\n\nexport default RecipeSearchResult;","import React, { Component } from 'react';\nimport FoodService from '../../services/FoodService';\nimport './recipesearch.css'\nimport RecipeSearchResult from '../recipesearchresult/RecipeSearchResult';\n\nclass RecipeSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipeName: '',\n      searchResults: [],\n    };\n    this.service = new FoodService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  searchRecipe = (e) => {\n    e.preventDefault();\n    const rSearch = this.state.recipeName;\n\n\n    this.service.searchRecipes(rSearch)\n      .then((searchResults) => {\n        console.log(\"==============\", searchResults)\n        this.setState({\n          searchResults: searchResults.results,\n        })\n      })\n\n  }\n\n  displayRecipeSearchResults = () => {\n\n    if (this.state.searchResults.length == 0) {\n      return (\n        <div className=\"message box\">\n          <p>Hello!  Welcome to my app, Recipe Buyer!  This app is suppose to simulate a website where you do your food shopping based on the recipes you want to cook</p>\n          <p>Please note that this website is just a <strong>simulation</strong> of a working website.  You won't be able to actually buy anything.</p>\n          <p>Enjoy!</p>\n          <p>Michael</p>\n        </div>\n      )\n    }\n\n    return this.state.searchResults.map((eachRecipe, i) => {\n      return (\n        <div key={i} className=\"recipe-search-result\">\n          <RecipeSearchResult\n            recipe={eachRecipe}\n            recipeID={eachRecipe.id}\n            recipeTitle={eachRecipe.title}\n          />\n        </div>\n      )\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"recipe-search-bar block field has-addons\">\n        <h3 className=\"title is-3\">Look Up Recipe</h3>\n        <form className=\"recipe-search-form\" onSubmit={this.searchRecipe}>\n          <input className=\"recipe-search-input input\" value={this.state.recipeName}\n            name=\"recipeName\"\n            onChange={this.handleChange}\n          />\n\n          <button className=\"button is-info\">Submit</button>\n\n        </form>\n\n        <div className=\"block\">\n          {this.displayRecipeSearchResults()}\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default RecipeSearch;","import React from 'react';\nimport './main.css';\nimport RecipeSearch from '../recipesearch/RecipeSearch';\n\n\nfunction Main(props) {\n\n  return (\n    <div className=\"Main\">\n      <RecipeSearch\n        {...props}\n      />\n    </div>\n  );\n\n}\n\nexport default Main;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './ingredientsaddedscreen.css'\n\nfunction IngredientsAddedScreen() {\n  return (\n    <div className=\"ing-added-window abs-window block\">\n      <h3>Ingredients have been successfully added</h3>\n      <div className=\"navigation-btns\">\n        <Link className=\"button is-primary nav-btn\" to='/'>ADD MORE RECIPES</Link>\n        <Link className=\"button is-success nav-btn\" to='/cart'>CHECKOUT</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default IngredientsAddedScreen","import React from 'react';\nimport IngredientsAddedScreen from '../ingredientsaddedscreen/IngredientsAddedScreen'\nimport './recipesummary.css'\n\n\n\nclass RecipeSummary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      theTitle: \"\",\n      theIngredients: [],\n      theInstructions: [],\n      theTags: [],\n      theCost: 0,\n      theImg: '',\n      ready: false,\n      ingredientScreen: false,\n    }\n    this.recipeID = this.props.match.params.recipeID\n  }\n\n  getRecipeSummary = () => {\n    this.props.foodService.getRecipeSummary(this.recipeID)\n      .then((theThing) => {\n        this.setState({\n          theTitle: theThing.title,\n          theIngredients: theThing.ingredients,\n          theInstructions: theThing.instructions,\n          theTags: theThing.tags,\n          theCost: theThing.cost,\n          theImg: theThing.image,\n          ready: true,\n        })\n      })\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.theIngredients.map((eachIngredient, i) => {\n      return (\n        <div key={i} className=\"summary-recipe-ingredient-listing columns block\">\n          <div className=\"column is-2\">\n            <img className=\"ingredient-img \" src={eachIngredient.image} alt={`${eachIngredient.name} image`} />\n          </div>\n\n          <div className=\"column is-2\">\n            <span className=\"ingredient-name \">{eachIngredient.name}</span>\n          </div>\n          <div column=\"column is-2\">\n            <span className=\"ingredient-amount-us \">{eachIngredient.usAmount} {eachIngredient.usUnit}</span>\n          </div>\n        </div>\n      )\n    })\n  }\n\n  displayRecipeInstructions = () => {\n    return this.state.theInstructions.map((eachStep, i) => {\n      return (\n        <li key={i}>{eachStep.step}</li>\n      )\n    })\n  }\n\n  displayRecipeTags = () => {\n    return this.state.theTags.map((eachTag, i) => {\n      return (\n        <li key={i}>{eachTag}</li>\n      )\n    })\n  }\n\n  addIngredientsToCart = () => {\n    console.log(this.state.theIngredients, this.recipeID, this.state.theTitle)\n    this.props.cartService.addIngredients(this.state.theIngredients, this.recipeID, this.state.theTitle, this.state.theCost, this.state.theImg)\n    this.setState({ ingredientScreen: true })\n  }\n\n\n  componentDidMount() {\n    this.getRecipeSummary();\n  }\n\n\n  render() {\n\n    if (this.state.ready)\n      return (\n        <div className=\"block\">\n          <div className=\"block summary-top\">\n            <img className=\"summary-image\" src={this.state.theImg} />\n            <h3 className=\"title is-2 recipe-name\">{this.state.theTitle}</h3>\n\n            {this.props.theUser &&\n              <button className=\"button is-primary add-btn\" onClick={this.addIngredientsToCart}>Add Ingredients</button>\n            }\n\n          </div>\n\n\n          <div className=\"recipe-ingredient-list block\">\n            <h3 className=\"title is-3\">Ingredients</h3>\n            {this.displayRecipeIngredients()}\n          </div>\n\n\n          <div className=\"recipe-directions block\">\n            <h3 className=\"title is-3\">Directions</h3>\n            <ol>\n              {this.displayRecipeInstructions()}\n            </ol>\n          </div>\n\n          {/* <div className=\"recipe-tags\">\n            <h3>Tags</h3>\n            <ol>\n              {this.displayRecipeTags()}\n            </ol>\n          </div> */}\n\n\n          {this.state.ingredientScreen &&\n            <IngredientsAddedScreen />}\n\n        </div>\n      )\n    else {\n      return (\n        <div>Loading...</div>\n      )\n    }\n  }\n\n}\n\nexport default RecipeSummary;","import React from 'react'\nimport CartService from '../../services/CartService'\n\nimport './cartingredient.css'\n\n\nclass CartIngredient extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cartService = new CartService()\n    this.state = {\n      id: '',\n      ingInclude: false,\n      ingName: '',\n      ingUsAmount: 0,\n      ingUsUnit: '',\n      ingMetAmount: 0,\n      ingMetUnit: '',\n      ingCost: 0\n    }\n  }\n\n  getRecipeIngredients = () => {\n    this.setState({\n      id: this.props.eachIng._id,\n      ingInclude: this.props.eachIng.include,\n      ingName: this.props.eachIng.name,\n      ingUsAmount: this.props.eachIng.usAmount,\n      ingUsUnit: this.props.eachIng.usUnit,\n      ingMetAmount: this.props.eachIng.metricAmount,\n      ingMetUnit: this.props.eachIng.metricUnit,\n      ingCost: this.props.eachIng.price,\n      ready: false,\n\n    })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getRecipeIngredients();\n    this.isReady();\n  }\n\n  checkBoxToggle = () => {\n    this.cartService.toggleIngredient(this.state.id, this.state.ingInclude, this.props.recipeID)\n      .then((theResponse) => {\n        this.props.getUsersCart();\n        this.setState({ ingInclude: !this.state.ingInclude })\n        this.props.updateRecipePrice(theResponse.cost)\n\n      })\n  }\n\n  ingredientCheckBox = () => {\n    if (this.state.ingInclude)\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"checked\"\n        />\n      )\n    else\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"\"\n        />\n      )\n  }\n\n  displayRecipeIngredients = () => {\n    return (\n      <div className=\"ing-listing d-flex\">\n        <div className=\"ing\">{this.ingredientCheckBox()}</div>\n        <div className=\"ing ing-name\">{this.state.ingName}</div>\n        <div className=\"ing ing-amount\">{this.state.ingUsAmount}</div>\n        <div className=\"ing ing-unit\">{this.state.ingUsUnit}</div>\n        {/* <div>{this.state.ingMetAmount}</div>\n        <div>{this.state.ingMetUnit}</div> */}\n        <div className=\"ing ing-cost\">${this.state.ingCost.toFixed(2)}</div>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"ing-listing-container\">\n          {this.displayRecipeIngredients()}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartIngredient;","import React from 'react'\nimport CartIngredient from '../cartingredient/CartIngredient'\n\nimport './cartrecipe.css'\n\n\nclass CartRecipe extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipeName: props.recipeInfo.name,\n      recipeIngredients: props.recipeInfo.ingredients,\n      recipeTotal: props.recipeInfo.cost,\n      ready: false,\n    }\n  }\n\n  updateRecipePrice = (updatedCost) => {\n    setTimeout(() => { this.setState({ recipeTotal: updatedCost }) }, 200)\n\n\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.recipeIngredients.map((eachIng) => {\n      return (\n        <div className=\"ingredient-listing\" key={eachIng._id}>\n          <CartIngredient\n            eachIng={eachIng}\n            recipeID={this.props.recipeInfo._id}\n            updateRecipePrice={this.updateRecipePrice}\n            getUsersCart={this.props.getUsersCart}\n          />\n        </div>\n      )\n    })\n  }\n\n\n  componentDidMount() {\n    this.isReady();\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"cart-recipe d-flex-col\">\n          <div className=\"cart-recipe-header\"><h3>{this.state.recipeName}</h3></div>\n          <div className=\"cart-recipe-info d-flex-col\">\n            {this.displayRecipeIngredients()}\n          </div>\n          <span className=\"d-flex\">\n            <div className=\"ing-checkbox\"></div>\n            <div className=\"ing-name\"></div>\n            <div className=\"ing-amount\"></div>\n            <div className=\"ing-unit\">Total:</div>\n            <div className=\"ing-cost\">${this.state.recipeTotal.toFixed(2)}</div>\n          </span>\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartRecipe;","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport './checkout.css'\n\nfunction Checkout() {\n  return (\n    <div className=\"checkout-window abs-window box\">\n      <h3>You have successfully checked out!</h3>\n      <p>Unfortuntely, there is no actual product available</p>\n      <p>Thank you for participating in the Recipe Buyer demo.</p>\n      <p>I hope you enjoyed yourself.</p>\n      <p>Please note that this project is incomplete, so stay tuned for more changes!</p>\n      <Link className=\"button is-info\" to='/'>Back Home</Link>\n    </div>\n  )\n}\n\nexport default Checkout","import React from 'react';\nimport CartService from '../../services/CartService'\n\nimport CartRecipe from '../cartrecipe/CartRecipe'\nimport Checkout from '../checkout/Checkout'\n\nimport './cart.css'\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cartIngredients: [],\n      cartRecipes: [],\n      ready: false,\n      cartTotal: 0,\n      checkoutScreen: false,\n    }\n    this.cartService = new CartService()\n  }\n\n  getUsersCart = () => {\n    this.cartService.grabUserAndCart()\n      .then((theUsersInfo) => {\n        this.setState({ cartRecipes: theUsersInfo.cart },\n          () => {\n            // console.log(this.state.cartRecipes)\n            let recipeCostArray = this.state.cartRecipes.map((eachR) => {\n              return eachR.cost\n            })\n            // console.log(recipeCostArray)\n            let theCartTotal = recipeCostArray.reduce((a, b) => a + b, 0)\n            this.setState({ cartTotal: theCartTotal })\n          })\n      })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getUsersCart();\n    this.isReady();\n  }\n\n\n\n  displayCartRecipes = () => {\n    return this.state.cartRecipes.map((eachRecipe) => {\n      return (\n        <div className=\"block\" key={eachRecipe._id}>\n          <CartRecipe recipeInfo={eachRecipe}\n            getUsersCart={this.getUsersCart} />\n        </div>\n      )\n    })\n  }\n\n  updateCartPriceTotal = (priceUpdate) => {\n    this.setState({ cartTotal: priceUpdate })\n  }\n\n  checkout = () => {\n    this.cartService.checkout()\n    this.setState({ checkoutScreen: true })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"block\">\n          <div className=\"cart-total box\">\n            <div>Total: ${this.state.cartTotal.toFixed(2)}</div>\n            <button className=\"button is-success\" onClick={() => { this.checkout() }}>Checkout</button>\n          </div>\n          {this.displayCartRecipes()}\n          {this.state.checkoutScreen &&\n            <Checkout />}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Cart</div>\n      )\n    }\n  }\n}\n\nexport default Cart\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', { username: username, password: password })\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', { username, password })\n      .then(response => response.data)\n  }\n\n  currentUser = () => {\n    return this.service.get('/getcurrentuser')\n      .then(response => response.data)\n  }\n\n\n  logout = () => {\n    return this.service.post('/logout', {})\n      .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './signup.css'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToSignUp = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.signup(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('signup');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"signup-form box\" onSubmit={this.tryToSignUp}>\n\n\n        <h3 className=\"title is-3 \">Sign Up</h3>\n\n        <legend className=\"label\">Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n          className=\"input\"\n        />\n\n        <legend className=\"label\">Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n          className=\"input\"\n          type=\"password\"\n        />\n\n\n\n        <button className=\"button\">Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './login.css'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToLogin = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.login(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('login');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"login-form box\" onSubmit={this.tryToLogin}>\n\n        <h3 className=\"title is-3 \">Login</h3>\n\n        <legend className=\"label\">Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n          className=\"input\"\n        />\n\n        <legend className=\"label\">Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n          className=\"input\"\n          type=\"password\"\n        />\n\n\n\n        <button className=\"button\">Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\n\nimport FoodService from './services/FoodService'\nimport CartService from './services/CartService'\n\nimport Navbar from './components/navbar/Navbar'\nimport Main from './components/main/Main'\nimport RecipeSummary from './components/recipesummary/RecipeSummary'\nimport Cart from './components/cart/Cart'\n\nimport AuthService from './services/AuthService.js';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      signupShowing: false,\n      loginShowing: false,\n    }\n    this.foodService = new FoodService()\n    this.authService = new AuthService()\n    this.cartService = new CartService()\n  }\n\n  getCurrentlyLoggedInUser = () => {\n    this.authService.currentUser()\n      .then((theUser) => {\n        this.setState({ currentlyLoggedIn: theUser })\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null })\n      })\n  }\n\n  toggleForm = (whichForm) => {\n    let theForm, otherForm;\n    if (whichForm === \"signup\") {\n      theForm = 'signupShowing'\n      otherForm = 'loginShowing'\n    } else {\n      theForm = 'loginShowing'\n      otherForm = 'signupShowing'\n    }\n    this.setState({ [theForm]: !this.state[theForm], [otherForm]: false })\n  }\n\n  // want to remove (using a params to find data)\n  setCurrentRecipe = (queryRecipeID) => {\n    this.setState({ currentRecipeID: queryRecipeID },\n      () => console.log(this.state.currentRecipeID))\n  }\n\n  componentDidMount() {\n    this.getCurrentlyLoggedInUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App \">\n        <Navbar\n          theUser={this.state.currentlyLoggedIn}\n          pleaseLogOut={() => this.authService.logout()}\n          getUser={this.getCurrentlyLoggedInUser}\n          toggleForm={this.toggleForm}\n        />\n\n        {this.state.signupShowing &&\n          <Signup getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        {this.state.loginShowing &&\n          <Login getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        <div class=\"container\">\n\n\n          <Switch>\n            <Route exact path=\"/\" render={(props) =>\n              <Main\n                message={this.state.message}\n              />} />\n\n            <Route exact path=\"/recipes/summary/:recipeID\" render={(props) =>\n              <RecipeSummary\n                {...props}\n                currentRecipeID={this.state.currentRecipeID}\n                foodService={this.foodService}\n                cartService={this.cartService}\n                theUser={this.state.currentlyLoggedIn}\n              />} />\n\n            <Route exact path=\"/cart\" render={(props) =>\n              <Cart\n              />} />\n          </Switch>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bulma/css/bulma.css';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}