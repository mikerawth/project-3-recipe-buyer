{"version":3,"sources":["services/FoodService.js","services/CartService.js","components/navbar/Navbar.js","components/recipesearchresult/RecipeSearchResult.js","components/recipesearch/RecipeSearch.js","components/main/Main.js","components/ingredientsaddedscreen/IngredientsAddedScreen.js","components/recipesummary/RecipeSummary.js","components/cartingredient/CartIngredient.js","components/cartrecipe/CartRecipe.js","components/checkout/Checkout.js","components/cart/Cart.js","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","App.js","serviceWorker.js","index.js"],"names":["FoodService","_this","this","Object","classCallCheck","test","searchRecipes","query","service","post","then","response","console","log","data","getRecipeSummary","recipeID","get","concat","getRecipeIngredients","getRecipeInstructions","axios","create","baseURL","process","withCredentials","CartService","addIngredients","theIngredients","recipeApiID","recipeName","recipeCost","grabIngredients","grabUserAndCart","grabIngredientInfo","ingID","toggleIngredient","currentStatus","checkout","Navbar","props","react_default","a","createElement","className","react_router_dom","to","theUser","onClick","toggleForm","username","pleaseLogOut","getUser","RecipeSearchResult","recipeTitle","RecipeSearch","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","searchRecipe","preventDefault","rSearch","state","searchResults","results","displayRecipeSearchResults","map","eachRecipe","i","key","recipesearchresult_RecipeSearchResult","id","title","onSubmit","onChange","Component","Main","recipesearch_RecipeSearch","IngredientsAddedScreen","RecipeSummary","foodService","theThing","theTitle","ingredients","theInstructions","instructions","theTags","tags","theCost","cost","ready","displayRecipeIngredients","eachIngredient","usAmount","usUnit","displayRecipeInstructions","eachStep","step","displayRecipeTags","eachTag","addIngredientsToCart","cartService","ingredientScreen","match","params","ingredientsaddedscreen_IngredientsAddedScreen","React","CartIngredient","eachIng","_id","ingInclude","include","ingName","ingUsAmount","ingUsUnit","ingMetAmount","metricAmount","ingMetUnit","metricUnit","ingCost","price","isReady","checkBoxToggle","theResponse","getUsersCart","updateRecipePrice","ingredientCheckBox","type","checked","toFixed","CartRecipe","updatedCost","setTimeout","recipeTotal","recipeIngredients","cartingredient_CartIngredient","recipeInfo","Checkout","Cart","theUsersInfo","cartRecipes","cart","theCartTotal","eachR","reduce","b","cartTotal","displayCartRecipes","cartrecipe_CartRecipe","updateCartPriceTotal","priceUpdate","checkoutScreen","cartIngredients","_this2","checkout_Checkout","AuthService","signup","password","login","currentUser","logout","Signup","tryToSignUp","uName","usernameInput","pWord","passwordInput","Login","tryToLogin","App","getCurrentlyLoggedInUser","authService","currentlyLoggedIn","catch","whichForm","_this$setState","theForm","otherForm","setCurrentRecipe","queryRecipeID","currentRecipeID","signupShowing","loginShowing","navbar_Navbar","signup_Signup","login_Login","react_router","exact","path","render","main_Main","message","recipesummary_RecipeSummary","assign","cart_Cart","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"oeAgDeA,EA5Cb,SAAAA,IAAc,IAAAC,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAF,GAAAE,KASdG,KAAO,WACL,MAAO,cAVKH,KAadI,cAAgB,SAACC,GACf,OAAON,EAAKO,QAAQC,KAAK,WAAaF,GACnCG,KAAK,SAAAC,GAEJ,OADAC,QAAQC,IAAI,0CAA2CF,EAASG,MACzDH,EAASG,QAjBRZ,KAqBda,iBAAmB,SAACC,GAClB,OAAOf,EAAKO,QAAQS,IAAb,IAAAC,OAAqBF,EAArB,iBACJN,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAvBjBZ,KA2BdiB,qBAAuB,SAACH,GACtB,OAAOf,EAAKO,QAAQS,IAAb,IAAAC,OAAqBF,EAArB,iBACJN,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QA7BjBZ,KAiCdkB,sBAAwB,SAACJ,GACvB,OAAOf,EAAKO,QAAQS,IAAb,IAAAC,OAAqBF,EAArB,kBACJN,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAlC7B,IAAIN,EAAUa,IAAMC,OAAO,CACzBC,QAASC,eACTC,iBAAiB,IAEnBvB,KAAKM,QAAUA,GCmCJkB,EAxCb,SAAAA,IAAc,IAAAzB,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAwB,GAAAxB,KAQdyB,eAAiB,SAACC,EAAgBC,EAAaC,EAAYC,GACzD,OAAO9B,EAAKO,QAAQC,KAAK,2BAA4B,CAAEmB,iBAAgBC,cAAaC,aAAYC,eAC7FrB,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAVjBZ,KAad8B,gBAAkB,WAChB,OAAO/B,EAAKO,QAAQS,IAAI,mBACrBP,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAfjBZ,KAmBd+B,gBAAkB,WAChB,OAAOhC,EAAKO,QAAQC,KAAK,cACtBC,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QArBjBZ,KAwBdgC,mBAAqB,SAACC,GACpB,OAAOlC,EAAKO,QAAQS,IAAb,QAAAC,OAAyBiB,IAC7BzB,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QA1BjBZ,KA6BdkC,iBAAmB,SAACD,EAAOE,EAAerB,GACxC,OAAOf,EAAKO,QAAQC,KAAb,eAAkC,CAAE0B,QAAOE,gBAAerB,aAC9DN,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QA/BjBZ,KAkCdoC,SAAW,WACT,OAAOrC,EAAKO,QAAQC,KAAK,aACtBC,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAnC7B,IAAIN,EAAUa,IAAMC,OAAO,CACzBC,QAASC,YACTC,iBAAiB,IAEnBvB,KAAKM,QAAUA,kBCoCJ+B,MAzCf,SAAgBC,GAUd,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,KAAZ,QACCN,EAAMO,SACLN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAASC,GAAG,SAAZ,UAKNL,EAAAC,EAAAC,cAAA,YACIH,EAAMO,SACNN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMR,EAAMS,WAAW,WAAxC,WACAR,EAAAC,EAAAC,cAAA,UAAQK,QAAS,kBAAMR,EAAMS,WAAW,YAAxC,YAIHT,EAAMO,SACLN,EAAAC,EAAAC,cAAA,YACEF,EAAAC,EAAAC,cAAA,YAAOH,EAAMO,QAAQG,UACrBT,EAAAC,EAAAC,cAAA,UAAQK,QA9BE,WAClBR,EAAMW,eACHzC,KAAK,WACJ8B,EAAMY,cA2BF,kCCtBGC,MAVf,SAA4Bb,GAE1B,OACEC,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAE,mBAAA5B,OAAqBsB,EAAMxB,WAChCwB,EAAMc,cCkEEC,cApEb,SAAAA,EAAYf,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAqD,IACjBtD,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAAoD,GAAAG,KAAAxD,KAAMsC,KAQRmB,aAAe,SAACC,GACd3D,EAAK4D,SAAL1D,OAAA2D,EAAA,EAAA3D,CAAA,GAAiByD,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAVzBhE,EAanBiE,aAAe,SAACN,GACdA,EAAEO,iBACF,IAAMC,EAAUnE,EAAKoE,MAAMvC,WAG3B7B,EAAKO,QAAQF,cAAc8D,GACxB1D,KAAK,SAAC4D,GACL1D,QAAQC,IAAI,iBAAkByD,GAC9BrE,EAAK4D,SAAS,CACZS,cAAeA,EAAcC,aAtBlBtE,EA4BnBuE,2BAA6B,WAE3B,OAAOvE,EAAKoE,MAAMC,cAAcG,IAAI,SAACC,EAAYC,GAC/C,OACElC,EAAAC,EAAAC,cAAA,OAAKiC,IAAKD,EAAG/B,UAAU,wBAIrBH,EAAAC,EAAAC,cAACkC,EAAD,CACE7D,SAAU0D,EAAWI,GACrBxB,YAAaoB,EAAWK,YApChC9E,EAAKoE,MAAQ,CACXvC,WAAY,GACZwC,cAAe,IAEjBrE,EAAKO,QAAU,IAAIR,EANFC,wEAgDjB,OACEwC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,4BACAF,EAAAC,EAAAC,cAAA,QAAMC,UAAU,qBAAqBoC,SAAU9E,KAAKgE,cAClDzB,EAAAC,EAAAC,cAAA,SAAOC,UAAU,sBAAsBqB,MAAO/D,KAAKmE,MAAMvC,WACvDkC,KAAK,aACLiB,SAAU/E,KAAKyD,eAGjBlB,EAAAC,EAAAC,cAAA,yBAKDzC,KAAKsE,qCA/DaU,aCYZC,MAZf,SAAc3C,GAEZ,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAACyC,EACK5C,KCGG6C,MAVf,WACE,OACE5C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,sDACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,kCACAL,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,SAAT,mCCgHSwC,cAlHb,SAAAA,EAAY9C,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAoF,IACjBrF,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAAmF,GAAA5B,KAAAxD,KAAMsC,KAaRzB,iBAAmB,WACjBd,EAAKuC,MAAM+C,YAAYxE,iBAAiBd,EAAKe,UAC1CN,KAAK,SAAC8E,GACLvF,EAAK4D,SAAS,CACZ4B,SAAUD,EAAST,MACnBnD,eAAgB4D,EAASE,YACzBC,gBAAiBH,EAASI,aAC1BC,QAASL,EAASM,KAClBC,QAASP,EAASQ,KAClBC,OAAO,GACN,kBAAMrF,QAAQC,IAAI,WAAY2E,QAxBpBvF,EA4BnBiG,yBAA2B,WACzB,OAAOjG,EAAKoE,MAAMzC,eAAe6C,IAAI,SAAC0B,EAAgBxB,GACpD,OACElC,EAAAC,EAAAC,cAAA,OAAKiC,IAAKD,GACRlC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,mBAAmBuD,EAAenC,KAAlD,OACAvB,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAwBuD,EAAeC,SAAvD,IAAkED,EAAeE,OAAjF,WAjCWpG,EAwCnBqG,0BAA4B,WAC1B,OAAOrG,EAAKoE,MAAMsB,gBAAgBlB,IAAI,SAAC8B,EAAU5B,GAC/C,OACElC,EAAAC,EAAAC,cAAA,MAAIiC,IAAKD,GAAI4B,EAASC,SA3CTvG,EAgDnBwG,kBAAoB,WAClB,OAAOxG,EAAKoE,MAAMwB,QAAQpB,IAAI,SAACiC,EAAS/B,GACtC,OACElC,EAAAC,EAAAC,cAAA,MAAIiC,IAAKD,GAAI+B,MAnDAzG,EAwDnB0G,qBAAuB,WACrB/F,QAAQC,IAAIZ,EAAKoE,MAAMzC,eAAgB3B,EAAKe,SAAUf,EAAKoE,MAAMoB,UACjExF,EAAKuC,MAAMoE,YAAYjF,eAAe1B,EAAKoE,MAAMzC,eAAgB3B,EAAKe,SAAUf,EAAKoE,MAAMoB,SAAUxF,EAAKoE,MAAM0B,SAChH9F,EAAK4D,SAAS,CAAEgD,kBAAkB,KAzDlC5G,EAAKoE,MAAQ,CACXoB,SAAU,GACV7D,eAAgB,GAChB+D,gBAAiB,GACjBE,QAAS,GACTE,QAAS,EACTE,OAAO,EACPY,kBAAkB,GAEpB5G,EAAKe,SAAWf,EAAKuC,MAAMsE,MAAMC,OAAO/F,SAXvBf,mFAgEjBC,KAAKa,oDAML,OAAIb,KAAKmE,MAAM4B,MAEXxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,UAAKzC,KAAKmE,MAAMoB,WAGlBhD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,yBACCzC,KAAKgG,4BAIRzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,UACGzC,KAAKoG,8BAIV7D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,UACGzC,KAAKuG,sBAGTvG,KAAKsC,MAAMO,SACVN,EAAAC,EAAAC,cAAA,UAAQK,QAAS9C,KAAKyG,sBAAtB,mBAGDzG,KAAKmE,MAAMwC,kBACVpE,EAAAC,EAAAC,cAACqE,EAAD,OAMJvE,EAAAC,EAAAC,cAAA,gCA5GoBsE,IAAM/B,WCoGnBgC,qBAlGb,SAAAA,EAAY1E,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAgH,IACjBjH,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAA+G,GAAAxD,KAAAxD,KAAMsC,KAcRrB,qBAAuB,WACrBlB,EAAK4D,SAAS,CACZiB,GAAI7E,EAAKuC,MAAM2E,QAAQC,IACvBC,WAAYpH,EAAKuC,MAAM2E,QAAQG,QAC/BC,QAAStH,EAAKuC,MAAM2E,QAAQnD,KAC5BwD,YAAavH,EAAKuC,MAAM2E,QAAQf,SAChCqB,UAAWxH,EAAKuC,MAAM2E,QAAQd,OAC9BqB,aAAczH,EAAKuC,MAAM2E,QAAQQ,aACjCC,WAAY3H,EAAKuC,MAAM2E,QAAQU,WAC/BC,QAAS7H,EAAKuC,MAAM2E,QAAQY,MAC5B9B,OAAO,KAzBQhG,EA8BnB+H,QAAU,WACR/H,EAAK4D,SAAS,CAAEoC,OAAO,KA/BNhG,EAuCnBgI,eAAiB,WACfhI,EAAK2G,YAAYxE,iBAAiBnC,EAAKoE,MAAMS,GAAI7E,EAAKoE,MAAMgD,WAAYpH,EAAKuC,MAAMxB,UAChFN,KAAK,SAACwH,GACLjI,EAAKuC,MAAM2F,eACXlI,EAAK4D,SAAS,CAAEwD,YAAapH,EAAKoE,MAAMgD,aACxCpH,EAAKuC,MAAM4F,kBAAkBF,EAAYlC,SA5C5B/F,EAiDnBoI,mBAAqB,WACnB,OAAIpI,EAAKoE,MAAMgD,WAEX5E,EAAAC,EAAAC,cAAA,SACEsC,SAAU,kBAAMhF,EAAKgI,kBACrBK,KAAK,WACLrE,MAAOhE,EAAKoE,MAAMgD,WAClBkB,QAAQ,YAKV9F,EAAAC,EAAAC,cAAA,SACEsC,SAAU,kBAAMhF,EAAKgI,kBACrBK,KAAK,WACLrE,MAAOhE,EAAKoE,MAAMgD,WAClBkB,QAAQ,MAjEGtI,EAsEnBiG,yBAA2B,WACzB,OACEzD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO3C,EAAKoI,sBAC3B5F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB3C,EAAKoE,MAAMkD,SAC1C9E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAAkB3C,EAAKoE,MAAMmD,aAC5C/E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAgB3C,EAAKoE,MAAMoD,WAG1ChF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAAf,IAAgC3C,EAAKoE,MAAMyD,QAAQU,QAAQ,MA7E/DvI,EAAK2G,YAAc,IAAIlF,EACvBzB,EAAKoE,MAAQ,CACXS,GAAI,GACJuC,YAAY,EACZE,QAAS,GACTC,YAAa,EACbC,UAAW,GACXC,aAAc,EACdE,WAAY,GACZE,QAAS,GAXM7H,mFAmCjBC,KAAKiB,uBACLjB,KAAK8H,2CAiDL,OAAI9H,KAAKmE,MAAM4B,MAEXxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACZ1C,KAAKgG,4BAKRzD,EAAAC,EAAAC,cAAA,oCA9FqBsE,IAAM/B,YCiEpBuD,qBAhEb,SAAAA,EAAYjG,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAuI,IACjBxI,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAAsI,GAAA/E,KAAAxD,KAAMsC,KASR4F,kBAAoB,SAACM,GACnBC,WAAW,WAAQ1I,EAAK4D,SAAS,CAAE+E,YAAaF,KAAkB,MAXjDzI,EAgBnBiG,yBAA2B,WACzB,OAAOjG,EAAKoE,MAAMwE,kBAAkBpE,IAAI,SAAC0C,GACvC,OACE1E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBAAqBgC,IAAKuC,EAAQC,KAC/C3E,EAAAC,EAAAC,cAACmG,EAAD,CACE3B,QAASA,EACTnG,SAAUf,EAAKuC,MAAMuG,WAAW3B,IAChCgB,kBAAmBnI,EAAKmI,kBACxBD,aAAclI,EAAKuC,MAAM2F,mBAxBhBlI,EAoCnB+H,QAAU,WACR/H,EAAK4D,SAAS,CAAEoC,OAAO,KAnCvBhG,EAAKoE,MAAQ,CACXvC,WAAYU,EAAMuG,WAAW/E,KAC7B6E,kBAAmBrG,EAAMuG,WAAWrD,YACpCkD,YAAapG,EAAMuG,WAAW/C,KAC9BC,OAAO,GANQhG,mFAiCjBC,KAAK8H,2CAQL,OAAI9H,KAAKmE,MAAM4B,MAEXxD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAAqBH,EAAAC,EAAAC,cAAA,UAAKzC,KAAKmE,MAAMvC,aACpDW,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACZ1C,KAAKgG,4BAERzD,EAAAC,EAAAC,cAAA,QAAMC,UAAU,UACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAf,IAA4B1C,KAAKmE,MAAMuE,YAAYJ,QAAQ,MAM/D/F,EAAAC,EAAAC,cAAA,oCA5DiBsE,IAAM/B,YCShB8D,MAZf,WACE,OACEvG,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACbH,EAAAC,EAAAC,cAAA,gDACAF,EAAAC,EAAAC,cAAA,kEACAF,EAAAC,EAAAC,cAAA,yCACAF,EAAAC,EAAAC,cAAA,yFACAF,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,KAAT,2BC+ESmG,qBAhFb,SAAAA,EAAYzG,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA+I,IACjBhJ,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAA8I,GAAAvF,KAAAxD,KAAMsC,KAWR2F,aAAe,WACblI,EAAK2G,YAAY3E,kBACdvB,KAAK,SAACwI,GACLjJ,EAAK4D,SAAS,CAAEsF,YAAaD,EAAaE,MACxC,WAEE,IAIIC,EAJkBpJ,EAAKoE,MAAM8E,YAAY1E,IAAI,SAAC6E,GAChD,OAAOA,EAAMtD,OAGoBuD,OAAO,SAAC7G,EAAG8G,GAAJ,OAAU9G,EAAI8G,GAAG,GAC3DvJ,EAAK4D,SAAS,CAAE4F,UAAWJ,SAvBlBpJ,EA4BnB+H,QAAU,WACR/H,EAAK4D,SAAS,CAAEoC,OAAO,KA7BNhG,EAuCnByJ,mBAAqB,WACnB,OAAOzJ,EAAKoE,MAAM8E,YAAY1E,IAAI,SAACC,GACjC,OACEjC,EAAAC,EAAAC,cAAA,OAAKiC,IAAKF,EAAW0C,KACnB3E,EAAAC,EAAAC,cAACgH,EAAD,CAAYZ,WAAYrE,EACtByD,aAAclI,EAAKkI,mBA5CVlI,EAkDnB2J,qBAAuB,SAACC,GACtB5J,EAAK4D,SAAS,CAAE4F,UAAWI,KAnDV5J,EAsDnBqC,SAAW,WACTrC,EAAK2G,YAAYtE,WACjBrC,EAAK4D,SAAS,CAAEiG,gBAAgB,KAtDhC7J,EAAKoE,MAAQ,CACX0F,gBAAiB,GACjBZ,YAAa,GACblD,OAAO,EACPwD,UAAW,EACXK,gBAAgB,GAElB7J,EAAK2G,YAAc,IAAIlF,EATNzB,mFAiCjBC,KAAKiI,eACLjI,KAAK8H,2CAyBE,IAAAgC,EAAA9J,KACP,OAAIA,KAAKmE,MAAM4B,MAEXxD,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,sBAAczC,KAAKmE,MAAMoF,UAAUjB,QAAQ,IAC3C/F,EAAAC,EAAAC,cAAA,UAAQK,QAAS,WAAQgH,EAAK1H,aAA9B,aAEDpC,KAAKwJ,qBACLxJ,KAAKmE,MAAMyF,gBACVrH,EAAAC,EAAAC,cAACsH,EAAD,OAKJxH,EAAAC,EAAAC,cAAA,kCA3EWsE,IAAM/B,YC2BVgF,EAhCb,SAAAA,IAAc,IAAAjK,EAAAC,KAAAC,OAAAC,EAAA,EAAAD,CAAAD,KAAAgK,GAAAhK,KAQdiK,OAAS,SAACjH,EAAUkH,GAClB,OAAOnK,EAAKO,QAAQC,KAAK,UAAW,CAAEyC,SAAUA,EAAUkH,SAAUA,IACjE1J,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAVjBZ,KAadmK,MAAQ,SAACnH,EAAUkH,GACjB,OAAOnK,EAAKO,QAAQC,KAAK,SAAU,CAAEyC,WAAUkH,aAC5C1J,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAfjBZ,KAkBdoK,YAAc,WACZ,OAAOrK,EAAKO,QAAQS,IAAI,mBACrBP,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QApBjBZ,KAwBdqK,OAAS,WACP,OAAOtK,EAAKO,QAAQC,KAAK,UAAW,IACjCC,KAAK,SAAAC,GAAQ,OAAIA,EAASG,QAzB7B,IAAIN,EAAUa,IAAMC,OAAO,CACzBC,QAASC,YACTC,iBAAiB,IAEnBvB,KAAKM,QAAUA,GCiDJgK,qBApDb,SAAAA,EAAYhI,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAAsK,IACjBvK,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAAqK,GAAA9G,KAAAxD,KAAMsC,KAKRmB,aAAe,SAACC,GACd3D,EAAK4D,SAAL1D,OAAA2D,EAAA,EAAA3D,CAAA,GAAiByD,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAPzBhE,EAUnBwK,YAAc,SAAC7G,GACbA,EAAEO,iBACF,IAAMuG,EAAQzK,EAAKoE,MAAMsG,cACnBC,EAAQ3K,EAAKoE,MAAMwG,cAEzB5K,EAAKO,QAAQ2J,OAAOO,EAAOE,GACxBlK,KAAK,WACJT,EAAKuC,MAAMS,WAAW,UACtBhD,EAAKuC,MAAMY,aAhBfnD,EAAKoE,MAAQ,CAAEsG,cAAe,GAAIE,cAAe,IACjD5K,EAAKO,QAAU,IAAI0J,EAHFjK,wEA0BjB,OACEwC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,cAAcoC,SAAU9E,KAAKuK,aAE3ChI,EAAAC,EAAAC,cAAA,mCAEAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOsB,MAAO/D,KAAKmE,MAAMsG,cACvB3G,KAAK,gBACLiB,SAAU/E,KAAKyD,eAGjBlB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOsB,MAAO/D,KAAKmE,MAAMwG,cACvB7G,KAAK,gBACLiB,SAAU/E,KAAKyD,eAKjBlB,EAAAC,EAAAC,cAAA,gCA9CauC,cCqDN4F,qBApDb,SAAAA,EAAYtI,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA4K,IACjB7K,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAA2K,GAAApH,KAAAxD,KAAMsC,KAKRmB,aAAe,SAACC,GACd3D,EAAK4D,SAAL1D,OAAA2D,EAAA,EAAA3D,CAAA,GAAiByD,EAAEG,OAAOC,KAAOJ,EAAEG,OAAOE,SAPzBhE,EAUnB8K,WAAa,SAACnH,GACZA,EAAEO,iBACF,IAAMuG,EAAQzK,EAAKoE,MAAMsG,cACnBC,EAAQ3K,EAAKoE,MAAMwG,cAEzB5K,EAAKO,QAAQ6J,MAAMK,EAAOE,GACvBlK,KAAK,WACJT,EAAKuC,MAAMS,WAAW,SACtBhD,EAAKuC,MAAMY,aAhBfnD,EAAKoE,MAAQ,CAAEsG,cAAe,GAAIE,cAAe,IACjD5K,EAAKO,QAAU,IAAI0J,EAHFjK,wEA0BjB,OACEwC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,aAAaoC,SAAU9E,KAAK6K,YAE1CtI,EAAAC,EAAAC,cAAA,mBAEAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOsB,MAAO/D,KAAKmE,MAAMsG,cACvB3G,KAAK,gBACLiB,SAAU/E,KAAKyD,eAGjBlB,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,SAAOsB,MAAO/D,KAAKmE,MAAMwG,cACvB7G,KAAK,gBACLiB,SAAU/E,KAAKyD,eAKjBlB,EAAAC,EAAAC,cAAA,gCA9CYuC,cCmHL8F,cAtGb,SAAAA,EAAYxI,GAAO,IAAAvC,EAAA,OAAAE,OAAAC,EAAA,EAAAD,CAAAD,KAAA8K,IACjB/K,EAAAE,OAAAqD,EAAA,EAAArD,CAAAD,KAAAC,OAAAsD,EAAA,EAAAtD,CAAA6K,GAAAtH,KAAAxD,KAAMsC,KAURyI,yBAA2B,WACzBhL,EAAKiL,YAAYZ,cACd5J,KAAK,SAACqC,GACL9C,EAAK4D,SAAS,CAAEsH,kBAAmBpI,MAEpCqI,MAAM,WACLnL,EAAK4D,SAAS,CAAEsH,kBAAmB,UAjBtBlL,EAqBnBgD,WAAa,SAACoI,GAAc,IAAAC,EACtBC,EAASC,EACK,WAAdH,GACFE,EAAU,gBACVC,EAAY,iBAEZD,EAAU,eACVC,EAAY,iBAEdvL,EAAK4D,UAALyH,EAAA,GAAAnL,OAAA2D,EAAA,EAAA3D,CAAAmL,EAAiBC,GAAWtL,EAAKoE,MAAMkH,IAAvCpL,OAAA2D,EAAA,EAAA3D,CAAAmL,EAAkDE,GAAY,GAA9DF,KA9BiBrL,EAkCnBwL,iBAAmB,SAACC,GAClBzL,EAAK4D,SAAS,CAAE8H,gBAAiBD,GAC/B,kBAAM9K,QAAQC,IAAIZ,EAAKoE,MAAMsH,oBAlC/B1L,EAAKoE,MAAQ,CACXuH,eAAe,EACfC,cAAc,GAEhB5L,EAAKsF,YAAc,IAAIvF,EACvBC,EAAKiL,YAAc,IAAIhB,EACvBjK,EAAK2G,YAAc,IAAIlF,EARNzB,mFAwCjBC,KAAK+K,4DAGE,IAAAjB,EAAA9J,KACP,OACEuC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAACmJ,EAAD,CACE/I,QAAS7C,KAAKmE,MAAM8G,kBACpBhI,aAAc,kBAAM6G,EAAKkB,YAAYX,UACrCnH,QAASlD,KAAK+K,yBACdhI,WAAY/C,KAAK+C,aAGlB/C,KAAKmE,MAAMuH,eACVnJ,EAAAC,EAAAC,cAACoJ,EAAD,CAAQ3I,QAASlD,KAAK+K,yBACpBhI,WAAY/C,KAAK+C,aAIpB/C,KAAKmE,MAAMwH,cACVpJ,EAAAC,EAAAC,cAACqJ,EAAD,CAAO5I,QAASlD,KAAK+K,yBACnBhI,WAAY/C,KAAK+C,aAKrBR,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,KAaExJ,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,OAAQ,SAAC5J,GAAD,OAC5BC,EAAAC,EAAAC,cAAC0J,EAAD,CACEC,QAAStC,EAAK3F,MAAMiI,aAGxB7J,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,6BAA6BC,OAAQ,SAAC5J,GAAD,OACrDC,EAAAC,EAAAC,cAAC4J,EAADpM,OAAAqM,OAAA,GACMhK,EADN,CAEEmJ,gBAAiB3B,EAAK3F,MAAMsH,gBAC5BpG,YAAayE,EAAKzE,YAClBqB,YAAaoD,EAAKpD,YAClB7D,QAASiH,EAAK3F,MAAM8G,wBAGxB1I,EAAAC,EAAAC,cAACsJ,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,QAAQC,OAAQ,SAAC5J,GAAD,OAChCC,EAAAC,EAAAC,cAAC8J,EAAD,kBA/FMxF,IAAM/B,WCJJwH,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS/F,MACvB,2DCXNgG,IAASV,OACP3J,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACEJ,EAAAC,EAAAC,cAACoK,EAAD,OAEAC,SAASC,eAAe,SDsHtB,kBAAmBC,WACrBA,UAAUC,cAAclH,MAAMvF,KAAK,SAAA0M,GACjCA,EAAaC","file":"static/js/main.c20e876e.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nclass FoodService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_FOODSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n\n  test = () => {\n    return 'test works'\n  }\n\n  searchRecipes = (query) => {\n    return this.service.post('/search/' + query)\n      .then(response => {\n        console.log(\"the response in the component >>>>>>>> \", response.data)\n        return response.data\n      })\n  }\n\n  getRecipeSummary = (recipeID) => {\n    return this.service.get(`/${recipeID}/information`)\n      .then(response => response.data)\n  }\n\n  // CHANGE TO GET PRICE OF RECIPE'S INGREDIENTS\n  getRecipeIngredients = (recipeID) => {\n    return this.service.get(`/${recipeID}/ingredients`)\n      .then(response => response.data)\n  }\n\n  // DO NOT USE\n  getRecipeInstructions = (recipeID) => {\n    return this.service.get(`/${recipeID}/instructions`)\n      .then(response => response.data)\n  }\n\n  // addIngredients = (theIngredients, apiID) => {\n  //   return this.service.post('/cart/addIngredients', { theIngredients, apiID })\n  //     .then(response => response.data)\n  // }\n}\n\nexport default FoodService","import axios from 'axios';\n\n\nclass CartService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_CARTSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  addIngredients = (theIngredients, recipeApiID, recipeName, recipeCost) => {\n    return this.service.post('/addRecipeAndIngredients', { theIngredients, recipeApiID, recipeName, recipeCost })\n      .then(response => response.data)\n  }\n\n  grabIngredients = () => {\n    return this.service.get('/getIngredients')\n      .then(response => response.data)\n  }\n\n\n  grabUserAndCart = () => {\n    return this.service.post('/usersCart')\n      .then(response => response.data)\n  }\n\n  grabIngredientInfo = (ingID) => {\n    return this.service.get(`/ing/${ingID}`)\n      .then(response => response.data)\n  }\n\n  toggleIngredient = (ingID, currentStatus, recipeID) => {\n    return this.service.post(`/ing/toggle/`, { ingID, currentStatus, recipeID })\n      .then(response => response.data)\n  }\n\n  checkout = () => {\n    return this.service.post('/checkout')\n      .then(response => response.data)\n  }\n}\n\nexport default CartService;","import React from 'react';\nimport './navbar.css'\nimport { NavLink, Redirect } from 'react-router-dom'\n\nfunction Navbar(props) {\n\n  const doTheLogout = () => {\n    props.pleaseLogOut()\n      .then(() => {\n        props.getUser();\n      })\n\n  }\n\n  return (\n    <div className=\"Navbar\">\n      <div>\n        <span>\n          <NavLink to=\"/\">Home</NavLink>\n          {props.theUser &&\n            <NavLink to=\"/cart\">Cart</NavLink>\n          }\n        </span>\n      </div>\n\n      <div>\n        {!props.theUser &&\n          <span>\n            <button onClick={() => props.toggleForm('login')} > Login </button>\n            <button onClick={() => props.toggleForm('signup')}>Sign Up</button>\n          </span>\n        }\n\n        {props.theUser &&\n          <span>\n            <span>{props.theUser.username}</span>\n            <button onClick={doTheLogout} >Log Out </button>\n          </span>\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './recipesearchresult.css'\n\nfunction RecipeSearchResult(props) {\n\n  return (\n    <Link to={`recipes/summary/${props.recipeID}`}>\n      {props.recipeTitle}\n    </Link>\n  )\n\n}\n\nexport default RecipeSearchResult;","import React, { Component } from 'react';\nimport FoodService from '../../services/FoodService';\nimport './recipesearch.css'\nimport RecipeSearchResult from '../recipesearchresult/RecipeSearchResult';\n\nclass RecipeSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipeName: '',\n      searchResults: [],\n    };\n    this.service = new FoodService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  searchRecipe = (e) => {\n    e.preventDefault();\n    const rSearch = this.state.recipeName;\n\n\n    this.service.searchRecipes(rSearch)\n      .then((searchResults) => {\n        console.log(\"==============\", searchResults)\n        this.setState({\n          searchResults: searchResults.results,\n        })\n      })\n\n  }\n\n  displayRecipeSearchResults = () => {\n\n    return this.state.searchResults.map((eachRecipe, i) => {\n      return (\n        <div key={i} className=\"recipe-search-result\">\n          {/* //   <Link to={`recipes/summary/${eachRecipe.id}`}>\n          //     {eachRecipe.title}\n          //   </Link> */}\n          <RecipeSearchResult\n            recipeID={eachRecipe.id}\n            recipeTitle={eachRecipe.title}\n          />\n        </div>\n      )\n    })\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"recipe-search-bar\">\n        <h3>Look Up Recipe</h3>\n        <form className=\"recipe-search-form\" onSubmit={this.searchRecipe}>\n          <input className=\"recipe-search-input\" value={this.state.recipeName}\n            name=\"recipeName\"\n            onChange={this.handleChange}\n          />\n\n          <button>Submit</button>\n\n        </form>\n\n\n        {this.displayRecipeSearchResults()}\n      </div>\n    )\n  }\n}\n\nexport default RecipeSearch;","import React from 'react';\nimport './main.css';\nimport RecipeSearch from '../recipesearch/RecipeSearch';\n\n\nfunction Main(props) {\n\n  return (\n    <div className=\"Main\">\n      <RecipeSearch\n        {...props}\n      />\n    </div>\n  );\n\n}\n\nexport default Main;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction IngredientsAddedScreen() {\n  return (\n    <div className=\"ing-added-window abs-window\">\n      <h3>Ingredients have been successfully added</h3>\n      <Link to='/'>Click here to add more recipes</Link>\n      <Link to='/cart'>Click here to go to your cart</Link>\n    </div>\n  )\n}\n\nexport default IngredientsAddedScreen","import React from 'react';\nimport IngredientsAddedScreen from '../ingredientsaddedscreen/IngredientsAddedScreen'\n\n\n\nclass RecipeSummary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      theTitle: \"\",\n      theIngredients: [],\n      theInstructions: [],\n      theTags: [],\n      theCost: 0,\n      ready: false,\n      ingredientScreen: false,\n    }\n    this.recipeID = this.props.match.params.recipeID\n  }\n\n  getRecipeSummary = () => {\n    this.props.foodService.getRecipeSummary(this.recipeID)\n      .then((theThing) => {\n        this.setState({\n          theTitle: theThing.title,\n          theIngredients: theThing.ingredients,\n          theInstructions: theThing.instructions,\n          theTags: theThing.tags,\n          theCost: theThing.cost,\n          ready: true,\n        }, () => console.log(\"theThing\", theThing))\n      })\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.theIngredients.map((eachIngredient, i) => {\n      return (\n        <div key={i}>\n          <span className=\"ingredient-name\">{eachIngredient.name} / </span>\n          <span className=\"ingredient-amount-us\">{eachIngredient.usAmount} {eachIngredient.usUnit} / </span>\n          {/* <span className=\"ingredient-amount-metric\">{eachIngredient.metricAmount} {eachIngredient.metricUnit}</span> */}\n        </div>\n      )\n    })\n  }\n\n  displayRecipeInstructions = () => {\n    return this.state.theInstructions.map((eachStep, i) => {\n      return (\n        <li key={i}>{eachStep.step}</li>\n      )\n    })\n  }\n\n  displayRecipeTags = () => {\n    return this.state.theTags.map((eachTag, i) => {\n      return (\n        <li key={i}>{eachTag}</li>\n      )\n    })\n  }\n\n  addIngredientsToCart = () => {\n    console.log(this.state.theIngredients, this.recipeID, this.state.theTitle)\n    this.props.cartService.addIngredients(this.state.theIngredients, this.recipeID, this.state.theTitle, this.state.theCost)\n    this.setState({ ingredientScreen: true })\n  }\n\n\n  componentDidMount() {\n    this.getRecipeSummary();\n  }\n\n\n  render() {\n\n    if (this.state.ready)\n      return (\n        <div>\n          <div className=\"recipe-name\">\n            <h2>{this.state.theTitle}</h2>\n          </div>\n\n          <div className=\"recipe-ingredient-list\">\n            <h3>Ingredients</h3>\n            {this.displayRecipeIngredients()}\n          </div>\n\n\n          <div className=\"recipe-directions\">\n            <h3>Directions</h3>\n            <ol>\n              {this.displayRecipeInstructions()}\n            </ol>\n          </div>\n\n          <div className=\"recipe-tags\">\n            <h3>Tags</h3>\n            <ol>\n              {this.displayRecipeTags()}\n            </ol>\n          </div>\n          {this.props.theUser &&\n            <button onClick={this.addIngredientsToCart}>Add Ingredients</button>\n          }\n\n          {this.state.ingredientScreen &&\n            <IngredientsAddedScreen />}\n\n        </div>\n      )\n    else {\n      return (\n        <div>Loading...</div>\n      )\n    }\n  }\n\n}\n\nexport default RecipeSummary;","import React from 'react'\nimport CartService from '../../services/CartService'\n\nimport './cartingredient.css'\n\n\nclass CartIngredient extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cartService = new CartService()\n    this.state = {\n      id: '',\n      ingInclude: false,\n      ingName: '',\n      ingUsAmount: 0,\n      ingUsUnit: '',\n      ingMetAmount: 0,\n      ingMetUnit: '',\n      ingCost: 0\n    }\n  }\n\n  getRecipeIngredients = () => {\n    this.setState({\n      id: this.props.eachIng._id,\n      ingInclude: this.props.eachIng.include,\n      ingName: this.props.eachIng.name,\n      ingUsAmount: this.props.eachIng.usAmount,\n      ingUsUnit: this.props.eachIng.usUnit,\n      ingMetAmount: this.props.eachIng.metricAmount,\n      ingMetUnit: this.props.eachIng.metricUnit,\n      ingCost: this.props.eachIng.price,\n      ready: false,\n\n    })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getRecipeIngredients();\n    this.isReady();\n  }\n\n  checkBoxToggle = () => {\n    this.cartService.toggleIngredient(this.state.id, this.state.ingInclude, this.props.recipeID)\n      .then((theResponse) => {\n        this.props.getUsersCart();\n        this.setState({ ingInclude: !this.state.ingInclude })\n        this.props.updateRecipePrice(theResponse.cost)\n\n      })\n  }\n\n  ingredientCheckBox = () => {\n    if (this.state.ingInclude)\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"checked\"\n        />\n      )\n    else\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"\"\n        />\n      )\n  }\n\n  displayRecipeIngredients = () => {\n    return (\n      <div className=\"ing-listing d-flex\">\n        <div className=\"ing\">{this.ingredientCheckBox()}</div>\n        <div className=\"ing ing-name\">{this.state.ingName}</div>\n        <div className=\"ing ing-amount\">{this.state.ingUsAmount}</div>\n        <div className=\"ing ing-unit\">{this.state.ingUsUnit}</div>\n        {/* <div>{this.state.ingMetAmount}</div>\n        <div>{this.state.ingMetUnit}</div> */}\n        <div className=\"ing ing-cost\">${this.state.ingCost.toFixed(2)}</div>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"ing-listing-container\">\n          {this.displayRecipeIngredients()}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartIngredient;","import React from 'react'\nimport CartIngredient from '../cartingredient/CartIngredient'\n\nimport './cartrecipe.css'\n\n\nclass CartRecipe extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipeName: props.recipeInfo.name,\n      recipeIngredients: props.recipeInfo.ingredients,\n      recipeTotal: props.recipeInfo.cost,\n      ready: false,\n    }\n  }\n\n  updateRecipePrice = (updatedCost) => {\n    setTimeout(() => { this.setState({ recipeTotal: updatedCost }) }, 200)\n\n\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.recipeIngredients.map((eachIng) => {\n      return (\n        <div className=\"ingredient-listing\" key={eachIng._id}>\n          <CartIngredient\n            eachIng={eachIng}\n            recipeID={this.props.recipeInfo._id}\n            updateRecipePrice={this.updateRecipePrice}\n            getUsersCart={this.props.getUsersCart}\n          />\n        </div>\n      )\n    })\n  }\n\n\n  componentDidMount() {\n    this.isReady();\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"cart-recipe d-flex-col\">\n          <div className=\"cart-recipe-header\"><h3>{this.state.recipeName}</h3></div>\n          <div className=\"cart-recipe-info d-flex-col\">\n            {this.displayRecipeIngredients()}\n          </div>\n          <span className=\"d-flex\">\n            <div className=\"ing-checkbox\"></div>\n            <div className=\"ing-name\"></div>\n            <div className=\"ing-amount\"></div>\n            <div className=\"ing-unit\">Total:</div>\n            <div className=\"ing-cost\">${this.state.recipeTotal.toFixed(2)}</div>\n          </span>\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartRecipe;","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nfunction Checkout() {\n  return (\n    <div className=\"checkout-window abs-window\">\n      <h3>You have successfully checked out!</h3>\n      <p>Thank you for participating in the Recipe Buyer demo.</p>\n      <p>I hope you enjoyed yourself.</p>\n      <p>Please note that this project is incomplete, so stay tuned for more changes!</p>\n      <Link to='/'>Back to the Home Page</Link>\n    </div>\n  )\n}\n\nexport default Checkout","import React from 'react';\nimport CartService from '../../services/CartService'\n\nimport CartRecipe from '../cartrecipe/CartRecipe'\nimport Checkout from '../checkout/Checkout'\n\nimport './cart.css'\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cartIngredients: [],\n      cartRecipes: [],\n      ready: false,\n      cartTotal: 0,\n      checkoutScreen: false,\n    }\n    this.cartService = new CartService()\n  }\n\n  getUsersCart = () => {\n    this.cartService.grabUserAndCart()\n      .then((theUsersInfo) => {\n        this.setState({ cartRecipes: theUsersInfo.cart },\n          () => {\n            // console.log(this.state.cartRecipes)\n            let recipeCostArray = this.state.cartRecipes.map((eachR) => {\n              return eachR.cost\n            })\n            // console.log(recipeCostArray)\n            let theCartTotal = recipeCostArray.reduce((a, b) => a + b, 0)\n            this.setState({ cartTotal: theCartTotal })\n          })\n      })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getUsersCart();\n    this.isReady();\n  }\n\n\n\n  displayCartRecipes = () => {\n    return this.state.cartRecipes.map((eachRecipe) => {\n      return (\n        <div key={eachRecipe._id}>\n          <CartRecipe recipeInfo={eachRecipe}\n            getUsersCart={this.getUsersCart} />\n        </div>\n      )\n    })\n  }\n\n  updateCartPriceTotal = (priceUpdate) => {\n    this.setState({ cartTotal: priceUpdate })\n  }\n\n  checkout = () => {\n    this.cartService.checkout()\n    this.setState({ checkoutScreen: true })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div>\n          <div className=\"cart-total\">\n            <div>Total: ${this.state.cartTotal.toFixed(2)}</div>\n            <button onClick={() => { this.checkout() }}>Checkout</button>\n          </div>\n          {this.displayCartRecipes()}\n          {this.state.checkoutScreen &&\n            <Checkout />}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Cart</div>\n      )\n    }\n  }\n}\n\nexport default Cart\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', { username: username, password: password })\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', { username, password })\n      .then(response => response.data)\n  }\n\n  currentUser = () => {\n    return this.service.get('/getcurrentuser')\n      .then(response => response.data)\n  }\n\n\n  logout = () => {\n    return this.service.post('/logout', {})\n      .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './signup.css'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToSignUp = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.signup(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('signup');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"signup-form\" onSubmit={this.tryToSignUp}>\n\n        <h3>Signup For An Account</h3>\n\n        <legend>Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './login.css'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToLogin = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.login(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('login');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"login-form\" onSubmit={this.tryToLogin}>\n\n        <h3>Login</h3>\n\n        <legend>Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\n\nimport FoodService from './services/FoodService'\nimport CartService from './services/CartService'\n\nimport Navbar from './components/navbar/Navbar'\nimport Main from './components/main/Main'\nimport RecipeSummary from './components/recipesummary/RecipeSummary'\nimport Cart from './components/cart/Cart'\n\nimport AuthService from './services/AuthService.js';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      signupShowing: false,\n      loginShowing: false,\n    }\n    this.foodService = new FoodService()\n    this.authService = new AuthService()\n    this.cartService = new CartService()\n  }\n\n  getCurrentlyLoggedInUser = () => {\n    this.authService.currentUser()\n      .then((theUser) => {\n        this.setState({ currentlyLoggedIn: theUser })\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null })\n      })\n  }\n\n  toggleForm = (whichForm) => {\n    let theForm, otherForm;\n    if (whichForm === \"signup\") {\n      theForm = 'signupShowing'\n      otherForm = 'loginShowing'\n    } else {\n      theForm = 'loginShowing'\n      otherForm = 'signupShowing'\n    }\n    this.setState({ [theForm]: !this.state[theForm], [otherForm]: false })\n  }\n\n  // want to remove (using a params to find data)\n  setCurrentRecipe = (queryRecipeID) => {\n    this.setState({ currentRecipeID: queryRecipeID },\n      () => console.log(this.state.currentRecipeID))\n  }\n\n  componentDidMount() {\n    this.getCurrentlyLoggedInUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          theUser={this.state.currentlyLoggedIn}\n          pleaseLogOut={() => this.authService.logout()}\n          getUser={this.getCurrentlyLoggedInUser}\n          toggleForm={this.toggleForm}\n        />\n\n        {this.state.signupShowing &&\n          <Signup getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        {this.state.loginShowing &&\n          <Login getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        {/* <div>My Heroku updated if this is showing on Heroku</div> */}\n        <Switch>\n\n          {/* <Route exact path=\"/login\" render={(props) =>\n            <Login\n              getUser={this.getCurrentlyLoggedInUser}\n            />} />\n\n          <Route exact path=\"/signup\" render={(props) =>\n            <Signup\n              getUser={this.getCurrentlyLoggedInUser}\n            />} /> */}\n\n\n          <Route exact path=\"/\" render={(props) =>\n            <Main\n              message={this.state.message}\n            />} />\n\n          <Route exact path=\"/recipes/summary/:recipeID\" render={(props) =>\n            <RecipeSummary\n              {...props}\n              currentRecipeID={this.state.currentRecipeID}\n              foodService={this.foodService}\n              cartService={this.cartService}\n              theUser={this.state.currentlyLoggedIn}\n            />} />\n\n          <Route exact path=\"/cart\" render={(props) =>\n            <Cart\n            />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}