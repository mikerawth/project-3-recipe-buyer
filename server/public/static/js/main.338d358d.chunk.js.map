{"version":3,"sources":["services/FoodService.js","services/CartService.js","components/navbar/Navbar.js","components/recipesearchresult/RecipeSearchResult.js","components/recipesearch/RecipeSearch.js","components/main/Main.js","components/recipesummary/RecipeSummary.js","components/cartingredient/CartIngredient.js","components/cartrecipe/CartRecipe.js","components/cart/Cart.js","services/AuthService.js","components/signup/Signup.js","components/login/Login.js","App.js","serviceWorker.js","index.js"],"names":["FoodService","_this","this","Object","classCallCheck","test","searchRecipes","query","service","post","then","response","console","log","data","getRecipeSummary","recipeID","get","concat","getRecipeIngredients","getRecipeInstructions","axios","create","baseURL","process","withCredentials","CartService","addIngredients","theIngredients","recipeApiID","recipeName","grabIngredients","grabUserAndCart","grabIngredientInfo","ingID","toggleIngredient","currentStatus","Navbar","props","react_default","a","createElement","className","react_router_dom","to","theUser","onClick","toggleForm","username","pleaseLogOut","getUser","RecipeSearchResult","recipeTitle","RecipeSearch","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","defineProperty","target","name","value","searchRecipe","preventDefault","rSearch","state","searchResults","results","ready","displayRecipeSearchResults","map","eachRecipe","i","key","recipesearchresult_RecipeSearchResult","id","title","onSubmit","onChange","Component","Main","recipesearch_RecipeSearch","RecipeSummary","foodService","theThing","theTitle","ingredients","theInstructions","instructions","theTags","tags","displayRecipeIngredients","eachIngredient","usAmount","usUnit","metricAmount","metricUnit","displayRecipeInstructions","eachStep","step","displayRecipeTags","eachTag","addIngredientsToCart","cartService","match","params","React","CartIngredient","eachIng","_id","ingInclude","include","ingName","ingUsAmount","ingUsUnit","ingMetAmount","ingMetUnit","isReady","checkBoxToggle","ingredientCheckBox","type","checked","ingCost","CartRecipe","recipeIngredients","cartingredient_CartIngredient","recipeInfo","Cart","getUsersCart","theUsersInfo","cartRecipes","cart","displayCartRecipes","cartrecipe_CartRecipe","cartIngredients","AuthService","signup","password","login","currentUser","logout","Signup","tryToSignUp","uName","usernameInput","pWord","passwordInput","Login","tryToLogin","App","getCurrentlyLoggedInUser","authService","currentlyLoggedIn","catch","whichForm","_this$setState","theForm","otherForm","setCurrentRecipe","queryRecipeID","currentRecipeID","signupShowing","loginShowing","_this2","navbar_Navbar","signup_Signup","login_Login","react_router","exact","path","render","main_Main","message","recipesummary_RecipeSummary","assign","cart_Cart","Boolean","window","location","hostname","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.338d358d.chunk.js","sourcesContent":["import axios from 'axios'\n\n\nclass FoodService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_FOODSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n\n  test = () => {\n    return 'test works'\n  }\n\n  searchRecipes = (query) => {\n    return this.service.post('/search/' + query)\n      .then(response => {\n        console.log(\"the response in the component >>>>>>>> \", response.data)\n        return response.data\n      })\n  }\n\n  getRecipeSummary = (recipeID) => {\n    return this.service.get(`/${recipeID}/information`)\n      .then(response => response.data)\n  }\n\n  // CHANGE TO GET PRICE OF RECIPE'S INGREDIENTS\n  getRecipeIngredients = (recipeID) => {\n    return this.service.get(`/${recipeID}/ingredients`)\n      .then(response => response.data)\n  }\n\n  // DO NOT USE\n  getRecipeInstructions = (recipeID) => {\n    return this.service.get(`/${recipeID}/instructions`)\n      .then(response => response.data)\n  }\n\n  // addIngredients = (theIngredients, apiID) => {\n  //   return this.service.post('/cart/addIngredients', { theIngredients, apiID })\n  //     .then(response => response.data)\n  // }\n}\n\nexport default FoodService","import axios from 'axios';\n\n\nclass CartService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_CARTSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  addIngredients = (theIngredients, recipeApiID, recipeName) => {\n    return this.service.post('/addRecipeAndIngredients', { theIngredients, recipeApiID, recipeName })\n      .then(response => response.data)\n  }\n\n  grabIngredients = () => {\n    return this.service.get('/getIngredients')\n      .then(response => response.data)\n  }\n\n\n  grabUserAndCart = () => {\n    return this.service.post('/usersCart')\n      .then(response => response.data)\n  }\n\n  grabIngredientInfo = (ingID) => {\n    return this.service.get(`/ing/${ingID}`)\n      .then(response => response.data)\n  }\n\n  toggleIngredient = (ingID, currentStatus) => {\n    return this.service.post(`/ing/toggle/`, { ingID, currentStatus })\n      .then(response => response.data)\n  }\n}\n\nexport default CartService;","import React from 'react';\nimport './navbar.css'\nimport { NavLink, Redirect } from 'react-router-dom'\n\nfunction Navbar(props) {\n\n  const doTheLogout = () => {\n    props.pleaseLogOut()\n      .then(() => {\n        props.getUser();\n      })\n\n  }\n\n  return (\n    <div className=\"Navbar\">\n      <div>\n        <span>\n          <NavLink to=\"/\">Home</NavLink>\n          {props.theUser &&\n            <NavLink to=\"/cart\">Cart</NavLink>\n          }\n        </span>\n      </div>\n\n      <div>\n        {!props.theUser &&\n          <span>\n            <button onClick={() => props.toggleForm('login')} > Login </button>\n            <button onClick={() => props.toggleForm('signup')}>Sign Up</button>\n          </span>\n        }\n\n        {props.theUser &&\n          <span>\n            <span>{props.theUser.username}</span>\n            <button onClick={doTheLogout} >Log Out </button>\n          </span>\n        }\n      </div>\n    </div>\n  );\n\n}\n\nexport default Navbar;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport './recipesearchresult.css'\n\nfunction RecipeSearchResult(props) {\n\n  return (\n    <Link to={`recipes/summary/${props.recipeID}`}>\n      {props.recipeTitle}\n    </Link>\n  )\n\n}\n\nexport default RecipeSearchResult;","import React, { Component } from 'react';\nimport FoodService from '../../services/FoodService';\nimport './recipesearch.css'\nimport RecipeSearchResult from '../recipesearchresult/RecipeSearchResult';\n\nclass RecipeSearch extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      recipeName: '',\n      searchResults: [],\n      ready: false,\n    };\n    this.service = new FoodService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  searchRecipe = (e) => {\n    e.preventDefault();\n    const rSearch = this.state.recipeName;\n\n\n    this.service.searchRecipes(rSearch)\n      .then((searchResults) => {\n        console.log(\"==============\", searchResults)\n        this.setState({\n          searchResults: searchResults.results,\n          ready: true\n        })\n      })\n\n  }\n\n  displayRecipeSearchResults = () => {\n    if (this.state.ready) {\n      // this.setState({ ready: false })\n      console.log(\"i'm ready, i'm ready, i'm ready\", this.state.ready)\n      return this.state.searchResults.map((eachRecipe, i) => {\n        return (\n          <div key={i} className=\"recipe-search-result\">\n            {/* //   <Link to={`recipes/summary/${eachRecipe.id}`}>\n          //     {eachRecipe.title}\n          //   </Link> */}\n            <RecipeSearchResult\n              recipeID={eachRecipe.id}\n              recipeTitle={eachRecipe.title}\n            />\n          </div>\n        )\n      })\n    } else {\n      return (<div>Loading</div>)\n    }\n  }\n\n\n\n  render() {\n    return (\n      <div className=\"recipe-search-bar\">\n        <h3>Look Up Recipe</h3>\n        <form className=\"recipe-search-form\" onSubmit={this.searchRecipe}>\n          <input className=\"recipe-search-input\" value={this.state.recipeName}\n            name=\"recipeName\"\n            onChange={this.handleChange}\n          />\n\n          <button>Submit</button>\n\n        </form>\n\n\n        {this.displayRecipeSearchResults()}\n      </div>\n    )\n  }\n}\n\nexport default RecipeSearch;","import React from 'react';\nimport './main.css';\nimport RecipeSearch from '../recipesearch/RecipeSearch';\n\n\nfunction Main(props) {\n\n  return (\n    <div className=\"Main\">\n      <RecipeSearch\n        {...props}\n      />\n    </div>\n  );\n\n}\n\nexport default Main;","import React from 'react';\n\n\n\nclass RecipeSummary extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      theTitle: \"\",\n      theIngredients: [],\n      theInstructions: [],\n      theTags: [],\n      ready: false\n    }\n    this.recipeID = this.props.match.params.recipeID\n  }\n\n  getRecipeSummary = () => {\n    this.props.foodService.getRecipeSummary(this.recipeID)\n      .then((theThing) => {\n        this.setState({\n          theTitle: theThing.title,\n          theIngredients: theThing.ingredients,\n          theInstructions: theThing.instructions,\n          theTags: theThing.tags,\n          ready: true,\n        }, () => console.log(\"theThing\", theThing))\n      })\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.theIngredients.map((eachIngredient, i) => {\n      return (\n        <div key={i}>\n          <span className=\"ingredient-name\">{eachIngredient.name} / </span>\n          <span className=\"ingredient-amount-us\">{eachIngredient.usAmount}{eachIngredient.usUnit} / </span>\n          <span className=\"ingredient-amount-metric\">{eachIngredient.metricAmount}{eachIngredient.metricUnit}</span>\n        </div>\n      )\n    })\n  }\n\n  displayRecipeInstructions = () => {\n    return this.state.theInstructions.map((eachStep, i) => {\n      return (\n        <li key={i}>{eachStep.step}</li>\n      )\n    })\n  }\n\n  displayRecipeTags = () => {\n    return this.state.theTags.map((eachTag, i) => {\n      return (\n        <li key={i}>{eachTag}</li>\n      )\n    })\n  }\n\n  addIngredientsToCart = () => {\n    console.log(this.state.theIngredients, this.recipeID, this.state.theTitle)\n    this.props.cartService.addIngredients(this.state.theIngredients, this.recipeID, this.state.theTitle)\n  }\n\n\n  componentDidMount() {\n    this.getRecipeSummary();\n  }\n\n\n  render() {\n\n    if (this.state.ready)\n      return (\n        <div>\n          <div className=\"recipe-name\">\n            <h2>{this.state.theTitle}</h2>\n          </div>\n\n          <div className=\"recipe-ingredient-list\">\n            <h3>Ingredients</h3>\n            {this.displayRecipeIngredients()}\n          </div>\n\n\n          <div className=\"recipe-directions\">\n            <h3>Directions</h3>\n            <ol>\n              {this.displayRecipeInstructions()}\n            </ol>\n          </div>\n\n          <div className=\"recipe-tags\">\n            <h3>Tags</h3>\n            <ol>\n              {this.displayRecipeTags()}\n            </ol>\n          </div>\n          {this.props.theUser &&\n            <button onClick={this.addIngredientsToCart}>Add Ingredients</button>\n          }\n\n\n        </div>\n      )\n    else {\n      return (\n        <div>Loading...</div>\n      )\n    }\n  }\n\n}\n\nexport default RecipeSummary;","import React from 'react'\nimport CartService from '../../services/CartService'\n\nimport './cartingredient.css'\n\n\nclass CartIngredient extends React.Component {\n  constructor(props) {\n    super(props)\n    this.cartService = new CartService()\n    this.state = {\n      id: '',\n      ingInclude: false,\n      ingName: '',\n      ingUsAmount: 0,\n      ingUsUnit: '',\n      ingMetAmount: 0,\n      ingMetUnit: '',\n      ingCost: 0\n    }\n  }\n\n  getRecipeIngredients = () => {\n    this.setState({\n      id: this.props.eachIng._id,\n      ingInclude: this.props.eachIng.include,\n      ingName: this.props.eachIng.name,\n      ingUsAmount: this.props.eachIng.usAmount,\n      ingUsUnit: this.props.eachIng.usUnit,\n      ingMetAmount: this.props.eachIng.metricAmount,\n      ingMetUnit: this.props.eachIng.metricUnit,\n      ready: false,\n\n    })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    this.getRecipeIngredients();\n    this.isReady();\n  }\n\n  checkBoxToggle = () => {\n    this.cartService.toggleIngredient(this.state.id, this.state.ingInclude)\n      .then(() => {\n        this.setState({ ingInclude: !this.state.ingInclude },\n          () => console.log(this.state.id))\n      })\n  }\n\n  ingredientCheckBox = () => {\n    if (this.state.ingInclude)\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"checked\"\n        />\n      )\n    else\n      return (\n        <input\n          onChange={() => this.checkBoxToggle()}\n          type=\"checkbox\"\n          value={this.state.ingInclude}\n          checked=\"\"\n        />\n      )\n  }\n\n  displayRecipeIngredients = () => {\n    return (\n      <div className=\"ing-listing d-flex\">\n        <div className=\"ing\">{this.ingredientCheckBox()}</div>\n        <div className=\"ing ing-name\">{this.state.ingName}</div>\n        <div className=\"ing ing-amount\">{this.state.ingUsAmount}</div>\n        <div className=\"ing ing-unit\">{this.state.ingUsUnit}</div>\n        {/* <div>{this.state.ingMetAmount}</div>\n        <div>{this.state.ingMetUnit}</div> */}\n        <div className=\"ing ing-cost\">{this.state.ingCost}</div>\n      </div>\n    )\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"ing-listing-container\">\n          {this.displayRecipeIngredients()}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartIngredient;","import React from 'react'\nimport CartIngredient from '../cartingredient/CartIngredient'\n\nimport './cartrecipe.css'\n\n\nclass CartRecipe extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      recipeName: props.recipeInfo.name,\n      recipeIngredients: props.recipeInfo.ingredients,\n      ready: false,\n    }\n  }\n\n  displayRecipeIngredients = () => {\n    return this.state.recipeIngredients.map((eachIng) => {\n      return (\n        <div className=\"ingredient-listing\" key={eachIng._id}>\n          <CartIngredient eachIng={eachIng} />\n        </div>\n      )\n    })\n  }\n\n  componentDidMount() {\n    this.isReady();\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div className=\"cart-recipe d-flex-col\">\n          <div className=\"cart-recipe-header\"><h3>{this.state.recipeName}</h3></div>\n          <div className=\"cart-recipe-info d-flex-col\">\n            {this.displayRecipeIngredients()}\n          </div>\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Recipe</div>\n      )\n    }\n  }\n}\nexport default CartRecipe;","import React from 'react';\nimport CartService from '../../services/CartService'\n\nimport CartRecipe from '../cartrecipe/CartRecipe'\n\nclass Cart extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      cartIngredients: [],\n      cartRecipes: [],\n      ready: false,\n    }\n    this.cartService = new CartService()\n  }\n\n  getUsersCart = () => {\n    this.cartService.grabUserAndCart()\n      .then((theUsersInfo) => {\n        console.log(theUsersInfo)\n        this.setState({ cartRecipes: theUsersInfo.cart })\n      })\n  }\n\n  isReady = () => {\n    this.setState({ ready: true })\n  }\n\n  componentDidMount() {\n    // this.getCartIngredients();\n    this.getUsersCart();\n    this.isReady();\n\n  }\n\n  displayCartRecipes = () => {\n    return this.state.cartRecipes.map((eachRecipe) => {\n      return (\n        <div key={eachRecipe._id}>\n          <CartRecipe recipeInfo={eachRecipe} />\n        </div>\n      )\n    })\n  }\n\n  render() {\n    if (this.state.ready)\n      return (\n        <div>\n          {this.displayCartRecipes()}\n          {/* Testing */}\n        </div>\n      )\n    else {\n      return (\n        <div>Loading Cart</div>\n      )\n    }\n  }\n}\n\nexport default Cart\n","import axios from 'axios';\n\nclass AuthService {\n  constructor() {\n    let service = axios.create({\n      baseURL: process.env.REACT_APP_AUTHSERVICE_BASE_URL,\n      withCredentials: true,\n    });\n    this.service = service;\n  }\n\n  signup = (username, password) => {\n    return this.service.post('/signup', { username: username, password: password })\n      .then(response => response.data)\n  }\n\n  login = (username, password) => {\n    return this.service.post('/login', { username, password })\n      .then(response => response.data)\n  }\n\n  currentUser = () => {\n    return this.service.get('/getcurrentuser')\n      .then(response => response.data)\n  }\n\n\n  logout = () => {\n    return this.service.post('/logout', {})\n      .then(response => response.data)\n  }\n\n\n}\n\nexport default AuthService;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './signup.css'\n\nclass Signup extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToSignUp = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.signup(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('signup');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"signup-form\" onSubmit={this.tryToSignUp}>\n\n        <h3>Signup For An Account</h3>\n\n        <legend>Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Signup;","import React, { Component } from 'react';\nimport AuthService from '../../services/AuthService';\nimport './login.css'\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { usernameInput: '', passwordInput: '' };\n    this.service = new AuthService();\n  }\n\n  handleChange = (e) => {\n    this.setState({ [e.target.name]: e.target.value })\n  }\n\n  tryToLogin = (e) => {\n    e.preventDefault();\n    const uName = this.state.usernameInput;\n    const pWord = this.state.passwordInput;\n\n    this.service.login(uName, pWord)\n      .then(() => {\n        this.props.toggleForm('login');\n        this.props.getUser();\n      })\n\n  }\n\n\n\n  render() {\n    return (\n      <form className=\"login-form\" onSubmit={this.tryToLogin}>\n\n        <h3>Login</h3>\n\n        <legend>Username</legend>\n        <input value={this.state.usernameInput}\n          name=\"usernameInput\"\n          onChange={this.handleChange}\n        />\n\n        <legend>Password</legend>\n        <input value={this.state.passwordInput}\n          name=\"passwordInput\"\n          onChange={this.handleChange}\n        />\n\n\n\n        <button>Submit</button>\n\n      </form>\n    )\n  }\n}\n\nexport default Login;","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom'\n\nimport FoodService from './services/FoodService'\nimport CartService from './services/CartService'\n\nimport Navbar from './components/navbar/Navbar'\nimport Main from './components/main/Main'\nimport RecipeSummary from './components/recipesummary/RecipeSummary'\nimport Cart from './components/cart/Cart'\n\nimport AuthService from './services/AuthService.js';\nimport Signup from './components/signup/Signup.js';\nimport Login from './components/login/Login.js';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      signupShowing: false,\n      loginShowing: false,\n    }\n    this.foodService = new FoodService()\n    this.authService = new AuthService()\n    this.cartService = new CartService()\n  }\n\n  getCurrentlyLoggedInUser = () => {\n    this.authService.currentUser()\n      .then((theUser) => {\n        this.setState({ currentlyLoggedIn: theUser })\n      })\n      .catch(() => {\n        this.setState({ currentlyLoggedIn: null })\n      })\n  }\n\n  toggleForm = (whichForm) => {\n    let theForm, otherForm;\n    if (whichForm === \"signup\") {\n      theForm = 'signupShowing'\n      otherForm = 'loginShowing'\n    } else {\n      theForm = 'loginShowing'\n      otherForm = 'signupShowing'\n    }\n    this.setState({ [theForm]: !this.state[theForm], [otherForm]: false })\n  }\n\n  // want to remove (using a params to find data)\n  setCurrentRecipe = (queryRecipeID) => {\n    this.setState({ currentRecipeID: queryRecipeID },\n      () => console.log(this.state.currentRecipeID))\n  }\n\n  componentDidMount() {\n    this.getCurrentlyLoggedInUser();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Navbar\n          theUser={this.state.currentlyLoggedIn}\n          pleaseLogOut={() => this.authService.logout()}\n          getUser={this.getCurrentlyLoggedInUser}\n          toggleForm={this.toggleForm}\n        />\n\n        {this.state.signupShowing &&\n          <Signup getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        {this.state.loginShowing &&\n          <Login getUser={this.getCurrentlyLoggedInUser}\n            toggleForm={this.toggleForm}\n          />\n        }\n\n        <div>My Heroku updated if this is showing on Heroku</div>\n        <Switch>\n\n          {/* <Route exact path=\"/login\" render={(props) =>\n            <Login\n              getUser={this.getCurrentlyLoggedInUser}\n            />} />\n\n          <Route exact path=\"/signup\" render={(props) =>\n            <Signup\n              getUser={this.getCurrentlyLoggedInUser}\n            />} /> */}\n\n\n          <Route exact path=\"/\" render={(props) =>\n            <Main\n              message={this.state.message}\n            />} />\n\n          <Route exact path=\"/recipes/summary/:recipeID\" render={(props) =>\n            <RecipeSummary\n              {...props}\n              currentRecipeID={this.state.currentRecipeID}\n              foodService={this.foodService}\n              cartService={this.cartService}\n              theUser={this.state.currentlyLoggedIn}\n            />} />\n\n          <Route exact path=\"/cart\" render={(props) =>\n            <Cart\n            />} />\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}